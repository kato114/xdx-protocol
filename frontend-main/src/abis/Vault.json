{
  "address": "0xb84439AA177f3838d46F0AD4e0CB3cb5C2534fdb",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdgAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "BuyUSDG",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "averagePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "entryFundingRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reserveAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "realisedPnl",
          "type": "int256"
        }
      ],
      "name": "ClosePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeUsd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeTokens",
          "type": "uint256"
        }
      ],
      "name": "CollectMarginFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeUsd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeTokens",
          "type": "uint256"
        }
      ],
      "name": "CollectSwapFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DecreaseGuaranteedUsd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DecreasePoolAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "DecreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DecreaseReservedAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DecreaseUsdgAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DirectPoolDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IncreaseGuaranteedUsd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IncreasePoolAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "IncreasePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IncreaseReservedAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IncreaseUsdgAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reserveAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "realisedPnl",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "markPrice",
          "type": "uint256"
        }
      ],
      "name": "LiquidatePosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdgAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "SellUSDG",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOutAfterFees",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fundingRate",
          "type": "uint256"
        }
      ],
      "name": "UpdateFundingRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "hasProfit",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delta",
          "type": "uint256"
        }
      ],
      "name": "UpdatePnl",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "averagePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "entryFundingRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reserveAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "realisedPnl",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "markPrice",
          "type": "uint256"
        }
      ],
      "name": "UpdatePosition",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIS_POINTS_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FUNDING_RATE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FEE_BASIS_POINTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FUNDING_RATE_FACTOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_LIQUIDATION_FEE_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_FUNDING_RATE_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_LEVERAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDG_DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "addRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenDiv",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenMul",
          "type": "address"
        }
      ],
      "name": "adjustForDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allWhitelistedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allWhitelistedTokensLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedRouters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bufferAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "buyUSDG",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "clearTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cumulativeFundingRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "decreasePosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "directPoolDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "errorController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "errors",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "feeReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingRateFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_averagePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_lastIncreasedTime",
          "type": "uint256"
        }
      ],
      "name": "getDelta",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "getEntryFundingRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdgDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_increment",
          "type": "bool"
        }
      ],
      "name": "getFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_entryFundingRate",
          "type": "uint256"
        }
      ],
      "name": "getFundingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getGlobalShortDelta",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getMaxPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getMinPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_averagePrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_nextPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lastIncreasedTime",
          "type": "uint256"
        }
      ],
      "name": "getNextAveragePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getNextFundingRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nextPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        }
      ],
      "name": "getNextGlobalShortAveragePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "getPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "getPositionDelta",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        }
      ],
      "name": "getPositionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "getPositionKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "getPositionLeverage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdgAmount",
          "type": "uint256"
        }
      ],
      "name": "getRedemptionAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getRedemptionCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getRedemptionCollateralUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTargetUsdgAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getUtilisation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "globalShortAveragePrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "globalShortSizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "guaranteedUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasDynamicFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inManagerMode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inPrivateLiquidationMode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "includeAmmPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "increasePosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdg",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_liquidationFeeUsd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fundingRateFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableFundingRateFactor",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLeverageEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isLiquidator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSwapEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastFundingTimes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_feeReceiver",
          "type": "address"
        }
      ],
      "name": "liquidatePosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationFeeUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marginFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxGasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxGlobalShortSizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxLeverage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxUsdgAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minProfitBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minProfitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintBurnFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "averagePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "entryFundingRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "realisedPnl",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "lastIncreasedTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "removeRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "reservedAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "sellUSDG",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setBufferAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_errorCode",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_error",
          "type": "string"
        }
      ],
      "name": "setError",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_errorController",
          "type": "address"
        }
      ],
      "name": "setErrorController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableTaxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintBurnFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_swapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableSwapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liquidationFeeUsd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_hasDynamicFees",
          "type": "bool"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fundingInterval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fundingRateFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableFundingRateFactor",
          "type": "uint256"
        }
      ],
      "name": "setFundingRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_inManagerMode",
          "type": "bool"
        }
      ],
      "name": "setInManagerMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_inPrivateLiquidationMode",
          "type": "bool"
        }
      ],
      "name": "setInPrivateLiquidationMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isLeverageEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsLeverageEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isSwapEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsSwapEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setLiquidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxGasPrice",
          "type": "uint256"
        }
      ],
      "name": "setMaxGasPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setMaxGlobalShortSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxLeverage",
          "type": "uint256"
        }
      ],
      "name": "setMaxLeverage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenDecimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitBps",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxUsdgAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isStable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isShortable",
          "type": "bool"
        }
      ],
      "name": "setTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setUsdgAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IVaultUtils",
          "name": "_vaultUtils",
          "type": "address"
        }
      ],
      "name": "setVaultUtils",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shortableTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stableFundingRateFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stableSwapFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stableTaxBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stableTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "tokenToUsdMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokenWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        }
      ],
      "name": "updateCumulativeFundingRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "upgradeVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "usdToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        }
      ],
      "name": "usdToTokenMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usdAmount",
          "type": "uint256"
        }
      ],
      "name": "usdToTokenMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usdgAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "useSwapPricing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_raise",
          "type": "bool"
        }
      ],
      "name": "validateLiquidation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultUtils",
      "outputs": [
        {
          "internalType": "contract IVaultUtils",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistedTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x83a9c101bb858f9f9cb8216179cdb5d7d1486d5bd625d8187c050f744bbc519f",
  "receipt": {
    "to": null,
    "from": "0xf5CA36c9873d61Bc28C117BD470981Ef6647A685",
    "contractAddress": "0xb84439AA177f3838d46F0AD4e0CB3cb5C2534fdb",
    "transactionIndex": 0,
    "gasUsed": "5571775",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x9e2ace5ffc36eee573edc951d8397059c962348ad8077042b5376c6c3188dd48",
    "transactionHash": "0x83a9c101bb858f9f9cb8216179cdb5d7d1486d5bd625d8187c050f744bbc519f",
    "logs": [],
    "blockNumber": 17374090,
    "cumulativeGasUsed": "5571775",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a5c1ec6ed734a994a4a7c4ed9bed389b",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdgAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"BuyUSDG\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryFundingRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"realisedPnl\",\"type\":\"int256\"}],\"name\":\"ClosePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeUsd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeTokens\",\"type\":\"uint256\"}],\"name\":\"CollectMarginFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeUsd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeTokens\",\"type\":\"uint256\"}],\"name\":\"CollectSwapFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DecreaseGuaranteedUsd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DecreasePoolAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"DecreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DecreaseReservedAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DecreaseUsdgAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DirectPoolDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IncreaseGuaranteedUsd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IncreasePoolAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"IncreasePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IncreaseReservedAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IncreaseUsdgAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"realisedPnl\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"markPrice\",\"type\":\"uint256\"}],\"name\":\"LiquidatePosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdgAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"SellUSDG\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOutAfterFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundingRate\",\"type\":\"uint256\"}],\"name\":\"UpdateFundingRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProfit\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delta\",\"type\":\"uint256\"}],\"name\":\"UpdatePnl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryFundingRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"realisedPnl\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"markPrice\",\"type\":\"uint256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FUNDING_RATE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE_BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FUNDING_RATE_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LIQUIDATION_FEE_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_FUNDING_RATE_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_LEVERAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDG_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"addRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenDiv\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenMul\",\"type\":\"address\"}],\"name\":\"adjustForDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allWhitelistedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allWhitelistedTokensLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedRouters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bufferAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"buyUSDG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"clearTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cumulativeFundingRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"decreasePosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"directPoolDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"errorController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"errors\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingRateFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_averagePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lastIncreasedTime\",\"type\":\"uint256\"}],\"name\":\"getDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getEntryFundingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdgDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_taxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_increment\",\"type\":\"bool\"}],\"name\":\"getFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_entryFundingRate\",\"type\":\"uint256\"}],\"name\":\"getFundingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getGlobalShortDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getMaxPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getMinPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_averagePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_nextPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastIncreasedTime\",\"type\":\"uint256\"}],\"name\":\"getNextAveragePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getNextFundingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nextPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"}],\"name\":\"getNextGlobalShortAveragePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPositionDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"}],\"name\":\"getPositionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPositionKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPositionLeverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdgAmount\",\"type\":\"uint256\"}],\"name\":\"getRedemptionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getRedemptionCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getRedemptionCollateralUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTargetUsdgAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getUtilisation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"globalShortAveragePrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"globalShortSizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"guaranteedUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasDynamicFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inManagerMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inPrivateLiquidationMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"includeAmmPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"increasePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFeeUsd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fundingRateFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableFundingRateFactor\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLeverageEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLiquidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSwapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastFundingTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"liquidatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationFeeUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marginFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxGlobalShortSizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLeverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxUsdgAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minProfitBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minProfitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintBurnFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryFundingRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"realisedPnl\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastIncreasedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"removeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reservedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"sellUSDG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setBufferAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_errorCode\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_error\",\"type\":\"string\"}],\"name\":\"setError\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_errorController\",\"type\":\"address\"}],\"name\":\"setErrorController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableTaxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintBurnFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_swapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableSwapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marginFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFeeUsd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_hasDynamicFees\",\"type\":\"bool\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fundingRateFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableFundingRateFactor\",\"type\":\"uint256\"}],\"name\":\"setFundingRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_inManagerMode\",\"type\":\"bool\"}],\"name\":\"setInManagerMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_inPrivateLiquidationMode\",\"type\":\"bool\"}],\"name\":\"setInPrivateLiquidationMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isLeverageEnabled\",\"type\":\"bool\"}],\"name\":\"setIsLeverageEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isSwapEnabled\",\"type\":\"bool\"}],\"name\":\"setIsSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setLiquidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isManager\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxGasPrice\",\"type\":\"uint256\"}],\"name\":\"setMaxGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMaxGlobalShortSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxLeverage\",\"type\":\"uint256\"}],\"name\":\"setMaxLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxUsdgAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isStable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isShortable\",\"type\":\"bool\"}],\"name\":\"setTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setUsdgAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVaultUtils\",\"name\":\"_vaultUtils\",\"type\":\"address\"}],\"name\":\"setVaultUtils\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shortableTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableFundingRateFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableSwapFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableTaxBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stableTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"tokenToUsdMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokenWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"}],\"name\":\"updateCumulativeFundingRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"upgradeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"usdToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"}],\"name\":\"usdToTokenMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"}],\"name\":\"usdToTokenMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usdgAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useSwapPricing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_raise\",\"type\":\"bool\"}],\"name\":\"validateLiquidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultUtils\",\"outputs\":[{\"internalType\":\"contract IVaultUtils\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistedTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Vault.sol\":\"Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/core/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../libraries/math/SafeMath.sol\\\";\\nimport \\\"../libraries/token/IERC20.sol\\\";\\nimport \\\"../libraries/token/SafeERC20.sol\\\";\\nimport \\\"../libraries/utils/ReentrancyGuard.sol\\\";\\n\\nimport \\\"../tokens/interfaces/IUSDG.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\nimport \\\"./interfaces/IVaultUtils.sol\\\";\\nimport \\\"./interfaces/IVaultPriceFeed.sol\\\";\\n\\n\\n\\ncontract Vault is ReentrancyGuard, IVault {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  struct Position {\\n    uint256 size;\\n    uint256 collateral;\\n    uint256 averagePrice;\\n    uint256 entryFundingRate;\\n    uint256 reserveAmount;\\n    int256 realisedPnl;\\n    uint256 lastIncreasedTime;\\n  }\\n\\n  uint256 public constant BASIS_POINTS_DIVISOR = 10000;\\n  uint256 public constant FUNDING_RATE_PRECISION = 1000000;\\n  uint256 public constant PRICE_PRECISION = 10**30;\\n  uint256 public constant MIN_LEVERAGE = 10000; // 1x\\n  uint256 public constant USDG_DECIMALS = 18;\\n  uint256 public constant MAX_FEE_BASIS_POINTS = 500; // 5%\\n  uint256 public constant MAX_LIQUIDATION_FEE_USD = 100 * PRICE_PRECISION; // 100 USD\\n  uint256 public constant MIN_FUNDING_RATE_INTERVAL = 1 hours;\\n  uint256 public constant MAX_FUNDING_RATE_FACTOR = 10000; // 1%\\n\\n  bool public override isInitialized;\\n  bool public override isSwapEnabled = true;\\n  bool public override isLeverageEnabled = true;\\n\\n  IVaultUtils public vaultUtils;\\n\\n  address public errorController;\\n\\n  address public override router;\\n  address public override priceFeed;\\n\\n  address public override usdg;\\n  address public override gov;\\n\\n  uint256 public override whitelistedTokenCount;\\n\\n  uint256 public override maxLeverage = 50 * 10000; // 50x\\n\\n  uint256 public override liquidationFeeUsd;\\n  uint256 public override taxBasisPoints = 50; // 0.5%\\n  uint256 public override stableTaxBasisPoints = 20; // 0.2%\\n  uint256 public override mintBurnFeeBasisPoints = 30; // 0.3%\\n  uint256 public override swapFeeBasisPoints = 30; // 0.3%\\n  uint256 public override stableSwapFeeBasisPoints = 4; // 0.04%\\n  uint256 public override marginFeeBasisPoints = 10; // 0.1%\\n\\n  uint256 public override minProfitTime;\\n  bool public override hasDynamicFees = false;\\n\\n  uint256 public override fundingInterval = 8 hours;\\n  uint256 public override fundingRateFactor;\\n  uint256 public override stableFundingRateFactor;\\n  uint256 public override totalTokenWeights;\\n\\n  bool public includeAmmPrice = true;\\n  bool public useSwapPricing = false;\\n\\n  bool public override inManagerMode = false;\\n  bool public override inPrivateLiquidationMode = false;\\n\\n  uint256 public override maxGasPrice;\\n\\n  mapping(address => mapping(address => bool)) public override approvedRouters;\\n  mapping(address => bool) public override isLiquidator;\\n  mapping(address => bool) public override isManager;\\n\\n  address[] public override allWhitelistedTokens;\\n\\n  mapping(address => bool) public override whitelistedTokens;\\n  mapping(address => uint256) public override tokenDecimals;\\n  mapping(address => uint256) public override minProfitBasisPoints;\\n  mapping(address => bool) public override stableTokens;\\n  mapping(address => bool) public override shortableTokens;\\n\\n  // tokenBalances is used only to determine _transferIn values\\n  mapping(address => uint256) public override tokenBalances;\\n\\n  // tokenWeights allows customisation of index composition\\n  mapping(address => uint256) public override tokenWeights;\\n\\n  // usdgAmounts tracks the amount of USDG debt for each whitelisted token\\n  mapping(address => uint256) public override usdgAmounts;\\n\\n  // maxUsdgAmounts allows setting a max amount of USDG debt for a token\\n  mapping(address => uint256) public override maxUsdgAmounts;\\n\\n  // poolAmounts tracks the number of received tokens that can be used for leverage\\n  // this is tracked separately from tokenBalances to exclude funds that are deposited as margin collateral\\n  mapping(address => uint256) public override poolAmounts;\\n\\n  // reservedAmounts tracks the number of tokens reserved for open leverage positions\\n  mapping(address => uint256) public override reservedAmounts;\\n\\n  // bufferAmounts allows specification of an amount to exclude from swaps\\n  // this can be used to ensure a certain amount of liquidity is available for leverage positions\\n  mapping(address => uint256) public override bufferAmounts;\\n\\n  // guaranteedUsd tracks the amount of USD that is \\\"guaranteed\\\" by opened leverage positions\\n  // this value is used to calculate the redemption values for selling of USDG\\n  // this is an estimated amount, it is possible for the actual guaranteed value to be lower\\n  // in the case of sudden price decreases, the guaranteed value should be corrected\\n  // after liquidations are carried out\\n  mapping(address => uint256) public override guaranteedUsd;\\n\\n  // cumulativeFundingRates tracks the funding rates based on utilization\\n  mapping(address => uint256) public override cumulativeFundingRates;\\n  // lastFundingTimes tracks the last time funding was updated for a token\\n  mapping(address => uint256) public override lastFundingTimes;\\n\\n  // positions tracks all open positions\\n  mapping(bytes32 => Position) public positions;\\n\\n  // feeReserves tracks the amount of fees per token\\n  mapping(address => uint256) public override feeReserves;\\n\\n  mapping(address => uint256) public override globalShortSizes;\\n  mapping(address => uint256) public override globalShortAveragePrices;\\n  mapping(address => uint256) public override maxGlobalShortSizes;\\n\\n  mapping(uint256 => string) public errors;\\n\\n  event BuyUSDG(\\n    address account,\\n    address token,\\n    uint256 tokenAmount,\\n    uint256 usdgAmount,\\n    uint256 feeBasisPoints\\n  );\\n  event SellUSDG(\\n    address account,\\n    address token,\\n    uint256 usdgAmount,\\n    uint256 tokenAmount,\\n    uint256 feeBasisPoints\\n  );\\n  event Swap(\\n    address account,\\n    address tokenIn,\\n    address tokenOut,\\n    uint256 amountIn,\\n    uint256 amountOut,\\n    uint256 amountOutAfterFees,\\n    uint256 feeBasisPoints\\n  );\\n\\n  event IncreasePosition(\\n    bytes32 key,\\n    address account,\\n    address collateralToken,\\n    address indexToken,\\n    uint256 collateralDelta,\\n    uint256 sizeDelta,\\n    bool isLong,\\n    uint256 price,\\n    uint256 fee\\n  );\\n  event DecreasePosition(\\n    bytes32 key,\\n    address account,\\n    address collateralToken,\\n    address indexToken,\\n    uint256 collateralDelta,\\n    uint256 sizeDelta,\\n    bool isLong,\\n    uint256 price,\\n    uint256 fee\\n  );\\n  event LiquidatePosition(\\n    bytes32 key,\\n    address account,\\n    address collateralToken,\\n    address indexToken,\\n    bool isLong,\\n    uint256 size,\\n    uint256 collateral,\\n    uint256 reserveAmount,\\n    int256 realisedPnl,\\n    uint256 markPrice\\n  );\\n  event UpdatePosition(\\n    bytes32 key,\\n    uint256 size,\\n    uint256 collateral,\\n    uint256 averagePrice,\\n    uint256 entryFundingRate,\\n    uint256 reserveAmount,\\n    int256 realisedPnl,\\n    uint256 markPrice\\n  );\\n  event ClosePosition(\\n    bytes32 key,\\n    uint256 size,\\n    uint256 collateral,\\n    uint256 averagePrice,\\n    uint256 entryFundingRate,\\n    uint256 reserveAmount,\\n    int256 realisedPnl\\n  );\\n\\n  event UpdateFundingRate(address token, uint256 fundingRate);\\n  event UpdatePnl(bytes32 key, bool hasProfit, uint256 delta);\\n\\n  event CollectSwapFees(address token, uint256 feeUsd, uint256 feeTokens);\\n  event CollectMarginFees(address token, uint256 feeUsd, uint256 feeTokens);\\n\\n  event DirectPoolDeposit(address token, uint256 amount);\\n  event IncreasePoolAmount(address token, uint256 amount);\\n  event DecreasePoolAmount(address token, uint256 amount);\\n  event IncreaseUsdgAmount(address token, uint256 amount);\\n  event DecreaseUsdgAmount(address token, uint256 amount);\\n  event IncreaseReservedAmount(address token, uint256 amount);\\n  event DecreaseReservedAmount(address token, uint256 amount);\\n  event IncreaseGuaranteedUsd(address token, uint256 amount);\\n  event DecreaseGuaranteedUsd(address token, uint256 amount);\\n\\n  // once the parameters are verified to be working correctly,\\n  // gov should be set to a timelock contract or a governance contract\\n  constructor() public {\\n    gov = msg.sender;\\n  }\\n\\n  function initialize(\\n    address _router,\\n    address _usdg,\\n    address _priceFeed,\\n    uint256 _liquidationFeeUsd,\\n    uint256 _fundingRateFactor,\\n    uint256 _stableFundingRateFactor\\n  ) external {\\n    _onlyGov();\\n    _validate(!isInitialized, 1);\\n    isInitialized = true;\\n\\n    router = _router;\\n    usdg = _usdg;\\n    priceFeed = _priceFeed;\\n    liquidationFeeUsd = _liquidationFeeUsd;\\n    fundingRateFactor = _fundingRateFactor;\\n    stableFundingRateFactor = _stableFundingRateFactor;\\n  }\\n\\n  function setVaultUtils(IVaultUtils _vaultUtils) external override {\\n    _onlyGov();\\n    vaultUtils = _vaultUtils;\\n  }\\n\\n  function setErrorController(address _errorController) external {\\n    _onlyGov();\\n    errorController = _errorController;\\n  }\\n\\n  function setError(uint256 _errorCode, string calldata _error) external override {\\n    require(msg.sender == errorController, \\\"Vault: invalid errorController\\\");\\n    errors[_errorCode] = _error;\\n  }\\n\\n  function allWhitelistedTokensLength() external view override returns (uint256) {\\n    return allWhitelistedTokens.length;\\n  }\\n\\n  function setInManagerMode(bool _inManagerMode) external override {\\n    _onlyGov();\\n    inManagerMode = _inManagerMode;\\n  }\\n\\n  function setManager(address _manager, bool _isManager) external override {\\n    _onlyGov();\\n    isManager[_manager] = _isManager;\\n  }\\n\\n  function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external override {\\n    _onlyGov();\\n    inPrivateLiquidationMode = _inPrivateLiquidationMode;\\n  }\\n\\n  function setLiquidator(address _liquidator, bool _isActive) external override {\\n    _onlyGov();\\n    isLiquidator[_liquidator] = _isActive;\\n  }\\n\\n  function setIsSwapEnabled(bool _isSwapEnabled) external override {\\n    _onlyGov();\\n    isSwapEnabled = _isSwapEnabled;\\n  }\\n\\n  function setIsLeverageEnabled(bool _isLeverageEnabled) external override {\\n    _onlyGov();\\n    isLeverageEnabled = _isLeverageEnabled;\\n  }\\n\\n  function setMaxGasPrice(uint256 _maxGasPrice) external override {\\n    _onlyGov();\\n    maxGasPrice = _maxGasPrice;\\n  }\\n\\n  function setGov(address _gov) external {\\n    _onlyGov();\\n    gov = _gov;\\n  }\\n\\n  function setPriceFeed(address _priceFeed) external override {\\n    _onlyGov();\\n    priceFeed = _priceFeed;\\n  }\\n\\n  function setMaxLeverage(uint256 _maxLeverage) external override {\\n    _onlyGov();\\n    _validate(_maxLeverage > MIN_LEVERAGE, 2);\\n    maxLeverage = _maxLeverage;\\n  }\\n\\n  function setBufferAmount(address _token, uint256 _amount) external override {\\n    _onlyGov();\\n    bufferAmounts[_token] = _amount;\\n  }\\n\\n  function setMaxGlobalShortSize(address _token, uint256 _amount) external override {\\n    _onlyGov();\\n    maxGlobalShortSizes[_token] = _amount;\\n  }\\n\\n  function setFees(\\n    uint256 _taxBasisPoints,\\n    uint256 _stableTaxBasisPoints,\\n    uint256 _mintBurnFeeBasisPoints,\\n    uint256 _swapFeeBasisPoints,\\n    uint256 _stableSwapFeeBasisPoints,\\n    uint256 _marginFeeBasisPoints,\\n    uint256 _liquidationFeeUsd,\\n    uint256 _minProfitTime,\\n    bool _hasDynamicFees\\n  ) external override {\\n    _onlyGov();\\n    _validate(_taxBasisPoints <= MAX_FEE_BASIS_POINTS, 3);\\n    _validate(_stableTaxBasisPoints <= MAX_FEE_BASIS_POINTS, 4);\\n    _validate(_mintBurnFeeBasisPoints <= MAX_FEE_BASIS_POINTS, 5);\\n    _validate(_swapFeeBasisPoints <= MAX_FEE_BASIS_POINTS, 6);\\n    _validate(_stableSwapFeeBasisPoints <= MAX_FEE_BASIS_POINTS, 7);\\n    _validate(_marginFeeBasisPoints <= MAX_FEE_BASIS_POINTS, 8);\\n    _validate(_liquidationFeeUsd <= MAX_LIQUIDATION_FEE_USD, 9);\\n    taxBasisPoints = _taxBasisPoints;\\n    stableTaxBasisPoints = _stableTaxBasisPoints;\\n    mintBurnFeeBasisPoints = _mintBurnFeeBasisPoints;\\n    swapFeeBasisPoints = _swapFeeBasisPoints;\\n    stableSwapFeeBasisPoints = _stableSwapFeeBasisPoints;\\n    marginFeeBasisPoints = _marginFeeBasisPoints;\\n    liquidationFeeUsd = _liquidationFeeUsd;\\n    minProfitTime = _minProfitTime;\\n    hasDynamicFees = _hasDynamicFees;\\n  }\\n\\n  function setFundingRate(\\n    uint256 _fundingInterval,\\n    uint256 _fundingRateFactor,\\n    uint256 _stableFundingRateFactor\\n  ) external override {\\n    _onlyGov();\\n    _validate(_fundingInterval >= MIN_FUNDING_RATE_INTERVAL, 10);\\n    _validate(_fundingRateFactor <= MAX_FUNDING_RATE_FACTOR, 11);\\n    _validate(_stableFundingRateFactor <= MAX_FUNDING_RATE_FACTOR, 12);\\n    fundingInterval = _fundingInterval;\\n    fundingRateFactor = _fundingRateFactor;\\n    stableFundingRateFactor = _stableFundingRateFactor;\\n  }\\n\\n  function setTokenConfig(\\n    address _token,\\n    uint256 _tokenDecimals,\\n    uint256 _tokenWeight,\\n    uint256 _minProfitBps,\\n    uint256 _maxUsdgAmount,\\n    bool _isStable,\\n    bool _isShortable\\n  ) external override {\\n    _onlyGov();\\n    // increment token count for the first time\\n    if (!whitelistedTokens[_token]) {\\n      whitelistedTokenCount = whitelistedTokenCount.add(1);\\n      allWhitelistedTokens.push(_token);\\n    }\\n\\n    uint256 _totalTokenWeights = totalTokenWeights;\\n    _totalTokenWeights = _totalTokenWeights.sub(tokenWeights[_token]);\\n\\n    whitelistedTokens[_token] = true;\\n    tokenDecimals[_token] = _tokenDecimals;\\n    tokenWeights[_token] = _tokenWeight;\\n    minProfitBasisPoints[_token] = _minProfitBps;\\n    maxUsdgAmounts[_token] = _maxUsdgAmount;\\n    stableTokens[_token] = _isStable;\\n    shortableTokens[_token] = _isShortable;\\n\\n    totalTokenWeights = _totalTokenWeights.add(_tokenWeight);\\n\\n    // validate price feed\\n    getMaxPrice(_token);\\n  }\\n\\n  function clearTokenConfig(address _token) external {\\n    _onlyGov();\\n    _validate(whitelistedTokens[_token], 13);\\n    totalTokenWeights = totalTokenWeights.sub(tokenWeights[_token]);\\n    delete whitelistedTokens[_token];\\n    delete tokenDecimals[_token];\\n    delete tokenWeights[_token];\\n    delete minProfitBasisPoints[_token];\\n    delete maxUsdgAmounts[_token];\\n    delete stableTokens[_token];\\n    delete shortableTokens[_token];\\n    whitelistedTokenCount = whitelistedTokenCount.sub(1);\\n  }\\n\\n  function withdrawFees(address _token, address _receiver) external override returns (uint256) {\\n    _onlyGov();\\n    uint256 amount = feeReserves[_token];\\n    if (amount == 0) {\\n      return 0;\\n    }\\n    feeReserves[_token] = 0;\\n    _transferOut(_token, amount, _receiver);\\n    return amount;\\n  }\\n\\n  function addRouter(address _router) external {\\n    approvedRouters[msg.sender][_router] = true;\\n  }\\n\\n  function removeRouter(address _router) external {\\n    approvedRouters[msg.sender][_router] = false;\\n  }\\n\\n  function setUsdgAmount(address _token, uint256 _amount) external override {\\n    _onlyGov();\\n\\n    uint256 usdgAmount = usdgAmounts[_token];\\n    if (_amount > usdgAmount) {\\n      _increaseUsdgAmount(_token, _amount.sub(usdgAmount));\\n      return;\\n    }\\n\\n    _decreaseUsdgAmount(_token, usdgAmount.sub(_amount));\\n  }\\n\\n  // the governance controlling this function should have a timelock\\n  function upgradeVault(\\n    address _newVault,\\n    address _token,\\n    uint256 _amount\\n  ) external {\\n    _onlyGov();\\n    IERC20(_token).safeTransfer(_newVault, _amount);\\n  }\\n\\n  // deposit into the pool without minting USDG tokens\\n  // useful in allowing the pool to become over-collaterised\\n  function directPoolDeposit(address _token) external override nonReentrant {\\n    _validate(whitelistedTokens[_token], 14);\\n    uint256 tokenAmount = _transferIn(_token);\\n    _validate(tokenAmount > 0, 15);\\n    _increasePoolAmount(_token, tokenAmount);\\n    emit DirectPoolDeposit(_token, tokenAmount);\\n  }\\n\\n  function buyUSDG(address _token, address _receiver)\\n    external\\n    override\\n    nonReentrant\\n    returns (uint256)\\n  {\\n    _validateManager();\\n    _validate(whitelistedTokens[_token], 16);\\n    useSwapPricing = true;\\n\\n    uint256 tokenAmount = _transferIn(_token);\\n    _validate(tokenAmount > 0, 17);\\n\\n    updateCumulativeFundingRate(_token, _token);\\n\\n    uint256 price = getMinPrice(_token);\\n\\n    uint256 usdgAmount = tokenAmount.mul(price).div(PRICE_PRECISION);\\n    usdgAmount = adjustForDecimals(usdgAmount, _token, usdg);\\n    _validate(usdgAmount > 0, 18);\\n\\n    uint256 feeBasisPoints = vaultUtils.getBuyUsdgFeeBasisPoints(_token, usdgAmount);\\n    uint256 amountAfterFees = _collectSwapFees(_token, tokenAmount, feeBasisPoints);\\n    uint256 mintAmount = amountAfterFees.mul(price).div(PRICE_PRECISION);\\n    mintAmount = adjustForDecimals(mintAmount, _token, usdg);\\n\\n    _increaseUsdgAmount(_token, mintAmount);\\n    _increasePoolAmount(_token, amountAfterFees);\\n\\n    IUSDG(usdg).mint(_receiver, mintAmount);\\n\\n    emit BuyUSDG(_receiver, _token, tokenAmount, mintAmount, feeBasisPoints);\\n\\n    useSwapPricing = false;\\n    return mintAmount;\\n  }\\n\\n  function sellUSDG(address _token, address _receiver)\\n    external\\n    override\\n    nonReentrant\\n    returns (uint256)\\n  {\\n    _validateManager();\\n    _validate(whitelistedTokens[_token], 19);\\n    useSwapPricing = true;\\n\\n    uint256 usdgAmount = _transferIn(usdg);\\n    _validate(usdgAmount > 0, 20);\\n\\n    updateCumulativeFundingRate(_token, _token);\\n\\n    uint256 redemptionAmount = getRedemptionAmount(_token, usdgAmount);\\n    _validate(redemptionAmount > 0, 21);\\n\\n    _decreaseUsdgAmount(_token, usdgAmount);\\n    _decreasePoolAmount(_token, redemptionAmount);\\n\\n    IUSDG(usdg).burn(address(this), usdgAmount);\\n\\n    // the _transferIn call increased the value of tokenBalances[usdg]\\n    // usually decreases in token balances are synced by calling _transferOut\\n    // however, for usdg, the tokens are burnt, so _updateTokenBalance should\\n    // be manually called to record the decrease in tokens\\n    _updateTokenBalance(usdg);\\n\\n    uint256 feeBasisPoints = vaultUtils.getSellUsdgFeeBasisPoints(_token, usdgAmount);\\n    uint256 amountOut = _collectSwapFees(_token, redemptionAmount, feeBasisPoints);\\n    _validate(amountOut > 0, 22);\\n\\n    _transferOut(_token, amountOut, _receiver);\\n\\n    emit SellUSDG(_receiver, _token, usdgAmount, amountOut, feeBasisPoints);\\n\\n    useSwapPricing = false;\\n    return amountOut;\\n  }\\n\\n  function swap(\\n    address _tokenIn,\\n    address _tokenOut,\\n    address _receiver\\n  ) external override nonReentrant returns (uint256) {\\n    _validate(isSwapEnabled, 23);\\n    _validate(whitelistedTokens[_tokenIn], 24);\\n    _validate(whitelistedTokens[_tokenOut], 25);\\n    _validate(_tokenIn != _tokenOut, 26);\\n\\n    useSwapPricing = true;\\n\\n    updateCumulativeFundingRate(_tokenIn, _tokenIn);\\n    updateCumulativeFundingRate(_tokenOut, _tokenOut);\\n\\n    uint256 amountIn = _transferIn(_tokenIn);\\n    _validate(amountIn > 0, 27);\\n\\n    uint256 priceIn = getMinPrice(_tokenIn);\\n    uint256 priceOut = getMaxPrice(_tokenOut);\\n\\n    uint256 amountOut = amountIn.mul(priceIn).div(priceOut);\\n    amountOut = adjustForDecimals(amountOut, _tokenIn, _tokenOut);\\n\\n    // adjust usdgAmounts by the same usdgAmount as debt is shifted between the assets\\n    uint256 usdgAmount = amountIn.mul(priceIn).div(PRICE_PRECISION);\\n    usdgAmount = adjustForDecimals(usdgAmount, _tokenIn, usdg);\\n\\n    uint256 feeBasisPoints = vaultUtils.getSwapFeeBasisPoints(_tokenIn, _tokenOut, usdgAmount);\\n    uint256 amountOutAfterFees = _collectSwapFees(_tokenOut, amountOut, feeBasisPoints);\\n\\n    _increaseUsdgAmount(_tokenIn, usdgAmount);\\n    _decreaseUsdgAmount(_tokenOut, usdgAmount);\\n\\n    _increasePoolAmount(_tokenIn, amountIn);\\n    _decreasePoolAmount(_tokenOut, amountOut);\\n\\n    _validateBufferAmount(_tokenOut);\\n\\n    _transferOut(_tokenOut, amountOutAfterFees, _receiver);\\n\\n    emit Swap(\\n      _receiver,\\n      _tokenIn,\\n      _tokenOut,\\n      amountIn,\\n      amountOut,\\n      amountOutAfterFees,\\n      feeBasisPoints\\n    );\\n\\n    useSwapPricing = false;\\n    return amountOutAfterFees;\\n  }\\n\\n  function increasePosition(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    uint256 _sizeDelta,\\n    bool _isLong\\n  ) external override nonReentrant {\\n    _validate(isLeverageEnabled, 28);\\n    _validateGasPrice();\\n    _validateRouter(_account);\\n    _validateTokens(_collateralToken, _indexToken, _isLong);\\n    vaultUtils.validateIncreasePosition(\\n      _account,\\n      _collateralToken,\\n      _indexToken,\\n      _sizeDelta,\\n      _isLong\\n    );\\n\\n    updateCumulativeFundingRate(_collateralToken, _indexToken);\\n\\n    bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n    Position storage position = positions[key];\\n\\n    uint256 price = _isLong ? getMaxPrice(_indexToken) : getMinPrice(_indexToken);\\n\\n    if (position.size == 0) {\\n      position.averagePrice = price;\\n    }\\n\\n    if (position.size > 0 && _sizeDelta > 0) {\\n      position.averagePrice = getNextAveragePrice(\\n        _indexToken,\\n        position.size,\\n        position.averagePrice,\\n        _isLong,\\n        price,\\n        _sizeDelta,\\n        position.lastIncreasedTime\\n      );\\n    }\\n\\n    uint256 fee = _collectMarginFees(\\n      _account,\\n      _collateralToken,\\n      _indexToken,\\n      _isLong,\\n      _sizeDelta,\\n      position.size,\\n      position.entryFundingRate\\n    );\\n    uint256 collateralDelta = _transferIn(_collateralToken);\\n    uint256 collateralDeltaUsd = tokenToUsdMin(_collateralToken, collateralDelta);\\n\\n    position.collateral = position.collateral.add(collateralDeltaUsd);\\n    _validate(position.collateral >= fee, 29);\\n\\n    position.collateral = position.collateral.sub(fee);\\n    position.entryFundingRate = getEntryFundingRate(_collateralToken, _indexToken, _isLong);\\n    position.size = position.size.add(_sizeDelta);\\n    position.lastIncreasedTime = block.timestamp;\\n\\n    _validate(position.size > 0, 30);\\n    _validatePosition(position.size, position.collateral);\\n    validateLiquidation(_account, _collateralToken, _indexToken, _isLong, true);\\n\\n    // reserve tokens to pay profits on the position\\n    uint256 reserveDelta = usdToTokenMax(_collateralToken, _sizeDelta);\\n    position.reserveAmount = position.reserveAmount.add(reserveDelta);\\n    _increaseReservedAmount(_collateralToken, reserveDelta);\\n\\n    if (_isLong) {\\n      // guaranteedUsd stores the sum of (position.size - position.collateral) for all positions\\n      // if a fee is charged on the collateral then guaranteedUsd should be increased by that fee amount\\n      // since (position.size - position.collateral) would have increased by `fee`\\n      _increaseGuaranteedUsd(_collateralToken, _sizeDelta.add(fee));\\n      _decreaseGuaranteedUsd(_collateralToken, collateralDeltaUsd);\\n      // treat the deposited collateral as part of the pool\\n      _increasePoolAmount(_collateralToken, collateralDelta);\\n      // fees need to be deducted from the pool since fees are deducted from position.collateral\\n      // and collateral is treated as part of the pool\\n      _decreasePoolAmount(_collateralToken, usdToTokenMin(_collateralToken, fee));\\n    } else {\\n      if (globalShortSizes[_indexToken] == 0) {\\n        globalShortAveragePrices[_indexToken] = price;\\n      } else {\\n        globalShortAveragePrices[_indexToken] = getNextGlobalShortAveragePrice(\\n          _indexToken,\\n          price,\\n          _sizeDelta\\n        );\\n      }\\n\\n      _increaseGlobalShortSize(_indexToken, _sizeDelta);\\n    }\\n\\n    emit IncreasePosition(\\n      key,\\n      _account,\\n      _collateralToken,\\n      _indexToken,\\n      collateralDeltaUsd,\\n      _sizeDelta,\\n      _isLong,\\n      price,\\n      fee\\n    );\\n    emit UpdatePosition(\\n      key,\\n      position.size,\\n      position.collateral,\\n      position.averagePrice,\\n      position.entryFundingRate,\\n      position.reserveAmount,\\n      position.realisedPnl,\\n      price\\n    );\\n  }\\n\\n  function decreasePosition(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    uint256 _collateralDelta,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    address _receiver\\n  ) external override nonReentrant returns (uint256) {\\n    _validateGasPrice();\\n    _validateRouter(_account);\\n    return\\n      _decreasePosition(\\n        _account,\\n        _collateralToken,\\n        _indexToken,\\n        _collateralDelta,\\n        _sizeDelta,\\n        _isLong,\\n        _receiver\\n      );\\n  }\\n\\n  function _decreasePosition(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    uint256 _collateralDelta,\\n    uint256 _sizeDelta,\\n    bool _isLong,\\n    address _receiver\\n  ) private returns (uint256) {\\n    vaultUtils.validateDecreasePosition(\\n      _account,\\n      _collateralToken,\\n      _indexToken,\\n      _collateralDelta,\\n      _sizeDelta,\\n      _isLong,\\n      _receiver\\n    );\\n    updateCumulativeFundingRate(_collateralToken, _indexToken);\\n\\n    bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n    Position storage position = positions[key];\\n    _validate(position.size > 0, 31);\\n    _validate(position.size >= _sizeDelta, 32);\\n    _validate(position.collateral >= _collateralDelta, 33);\\n\\n    uint256 collateral = position.collateral;\\n    // scrop variables to avoid stack too deep errors\\n    {\\n      uint256 reserveDelta = position.reserveAmount.mul(_sizeDelta).div(position.size);\\n      position.reserveAmount = position.reserveAmount.sub(reserveDelta);\\n      _decreaseReservedAmount(_collateralToken, reserveDelta);\\n    }\\n\\n    (uint256 usdOut, uint256 usdOutAfterFee) = _reduceCollateral(\\n      _account,\\n      _collateralToken,\\n      _indexToken,\\n      _collateralDelta,\\n      _sizeDelta,\\n      _isLong\\n    );\\n\\n    if (position.size != _sizeDelta) {\\n      position.entryFundingRate = getEntryFundingRate(_collateralToken, _indexToken, _isLong);\\n      position.size = position.size.sub(_sizeDelta);\\n\\n      _validatePosition(position.size, position.collateral);\\n      validateLiquidation(_account, _collateralToken, _indexToken, _isLong, true);\\n\\n      if (_isLong) {\\n        _increaseGuaranteedUsd(_collateralToken, collateral.sub(position.collateral));\\n        _decreaseGuaranteedUsd(_collateralToken, _sizeDelta);\\n      }\\n\\n      uint256 price = _isLong ? getMinPrice(_indexToken) : getMaxPrice(_indexToken);\\n      emit DecreasePosition(\\n        key,\\n        _account,\\n        _collateralToken,\\n        _indexToken,\\n        _collateralDelta,\\n        _sizeDelta,\\n        _isLong,\\n        price,\\n        usdOut.sub(usdOutAfterFee)\\n      );\\n      emit UpdatePosition(\\n        key,\\n        position.size,\\n        position.collateral,\\n        position.averagePrice,\\n        position.entryFundingRate,\\n        position.reserveAmount,\\n        position.realisedPnl,\\n        price\\n      );\\n    } else {\\n      if (_isLong) {\\n        _increaseGuaranteedUsd(_collateralToken, collateral);\\n        _decreaseGuaranteedUsd(_collateralToken, _sizeDelta);\\n      }\\n\\n      uint256 price = _isLong ? getMinPrice(_indexToken) : getMaxPrice(_indexToken);\\n      emit DecreasePosition(\\n        key,\\n        _account,\\n        _collateralToken,\\n        _indexToken,\\n        _collateralDelta,\\n        _sizeDelta,\\n        _isLong,\\n        price,\\n        usdOut.sub(usdOutAfterFee)\\n      );\\n      emit ClosePosition(\\n        key,\\n        position.size,\\n        position.collateral,\\n        position.averagePrice,\\n        position.entryFundingRate,\\n        position.reserveAmount,\\n        position.realisedPnl\\n      );\\n\\n      delete positions[key];\\n    }\\n\\n    if (!_isLong) {\\n      _decreaseGlobalShortSize(_indexToken, _sizeDelta);\\n    }\\n\\n    if (usdOut > 0) {\\n      if (_isLong) {\\n        _decreasePoolAmount(_collateralToken, usdToTokenMin(_collateralToken, usdOut));\\n      }\\n      uint256 amountOutAfterFees = usdToTokenMin(_collateralToken, usdOutAfterFee);\\n      _transferOut(_collateralToken, amountOutAfterFees, _receiver);\\n      return amountOutAfterFees;\\n    }\\n\\n    return 0;\\n  }\\n\\n  function liquidatePosition(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong,\\n    address _feeReceiver\\n  ) external override nonReentrant {\\n    if (inPrivateLiquidationMode) {\\n      _validate(isLiquidator[msg.sender], 34);\\n    }\\n\\n    // set includeAmmPrice to false to prevent manipulated liquidations\\n    includeAmmPrice = false;\\n\\n    updateCumulativeFundingRate(_collateralToken, _indexToken);\\n\\n    bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n    Position memory position = positions[key];\\n    _validate(position.size > 0, 35);\\n\\n    (uint256 liquidationState, uint256 marginFees) = validateLiquidation(\\n      _account,\\n      _collateralToken,\\n      _indexToken,\\n      _isLong,\\n      false\\n    );\\n    _validate(liquidationState != 0, 36);\\n    if (liquidationState == 2) {\\n      // max leverage exceeded but there is collateral remaining after deducting losses so decreasePosition instead\\n      _decreasePosition(\\n        _account,\\n        _collateralToken,\\n        _indexToken,\\n        0,\\n        position.size,\\n        _isLong,\\n        _account\\n      );\\n      includeAmmPrice = true;\\n      return;\\n    }\\n\\n    uint256 feeTokens = usdToTokenMin(_collateralToken, marginFees);\\n    feeReserves[_collateralToken] = feeReserves[_collateralToken].add(feeTokens);\\n    emit CollectMarginFees(_collateralToken, marginFees, feeTokens);\\n\\n    _decreaseReservedAmount(_collateralToken, position.reserveAmount);\\n    if (_isLong) {\\n      _decreaseGuaranteedUsd(_collateralToken, position.size.sub(position.collateral));\\n      _decreasePoolAmount(_collateralToken, usdToTokenMin(_collateralToken, marginFees));\\n    }\\n\\n    uint256 markPrice = _isLong ? getMinPrice(_indexToken) : getMaxPrice(_indexToken);\\n    emit LiquidatePosition(\\n      key,\\n      _account,\\n      _collateralToken,\\n      _indexToken,\\n      _isLong,\\n      position.size,\\n      position.collateral,\\n      position.reserveAmount,\\n      position.realisedPnl,\\n      markPrice\\n    );\\n\\n    if (!_isLong && marginFees < position.collateral) {\\n      uint256 remainingCollateral = position.collateral.sub(marginFees);\\n      _increasePoolAmount(_collateralToken, usdToTokenMin(_collateralToken, remainingCollateral));\\n    }\\n\\n    if (!_isLong) {\\n      _decreaseGlobalShortSize(_indexToken, position.size);\\n    }\\n\\n    delete positions[key];\\n\\n    // pay the fee receiver using the pool, we assume that in general the liquidated amount should be sufficient to cover\\n    // the liquidation fees\\n    _decreasePoolAmount(_collateralToken, usdToTokenMin(_collateralToken, liquidationFeeUsd));\\n    _transferOut(\\n      _collateralToken,\\n      usdToTokenMin(_collateralToken, liquidationFeeUsd),\\n      _feeReceiver\\n    );\\n\\n    includeAmmPrice = true;\\n  }\\n\\n  // validateLiquidation returns (state, fees)\\n  function validateLiquidation(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong,\\n    bool _raise\\n  ) public view override returns (uint256, uint256) {\\n    return vaultUtils.validateLiquidation(_account, _collateralToken, _indexToken, _isLong, _raise);\\n  }\\n\\n  function getMaxPrice(address _token) public view override returns (uint256) {\\n    return IVaultPriceFeed(priceFeed).getPrice(_token, true, includeAmmPrice, useSwapPricing);\\n  }\\n\\n  function getMinPrice(address _token) public view override returns (uint256) {\\n    return IVaultPriceFeed(priceFeed).getPrice(_token, false, includeAmmPrice, useSwapPricing);\\n  }\\n\\n  function getRedemptionAmount(address _token, uint256 _usdgAmount)\\n    public\\n    view\\n    override\\n    returns (uint256)\\n  {\\n    uint256 price = getMaxPrice(_token);\\n    uint256 redemptionAmount = _usdgAmount.mul(PRICE_PRECISION).div(price);\\n    return adjustForDecimals(redemptionAmount, usdg, _token);\\n  }\\n\\n  function getRedemptionCollateral(address _token) public view returns (uint256) {\\n    if (stableTokens[_token]) {\\n      return poolAmounts[_token];\\n    }\\n    uint256 collateral = usdToTokenMin(_token, guaranteedUsd[_token]);\\n    return collateral.add(poolAmounts[_token]).sub(reservedAmounts[_token]);\\n  }\\n\\n  function getRedemptionCollateralUsd(address _token) public view returns (uint256) {\\n    return tokenToUsdMin(_token, getRedemptionCollateral(_token));\\n  }\\n\\n  function adjustForDecimals(\\n    uint256 _amount,\\n    address _tokenDiv,\\n    address _tokenMul\\n  ) public view returns (uint256) {\\n    uint256 decimalsDiv = _tokenDiv == usdg ? USDG_DECIMALS : tokenDecimals[_tokenDiv];\\n    uint256 decimalsMul = _tokenMul == usdg ? USDG_DECIMALS : tokenDecimals[_tokenMul];\\n    return _amount.mul(10**decimalsMul).div(10**decimalsDiv);\\n  }\\n\\n  function tokenToUsdMin(address _token, uint256 _tokenAmount)\\n    public\\n    view\\n    override\\n    returns (uint256)\\n  {\\n    if (_tokenAmount == 0) {\\n      return 0;\\n    }\\n    uint256 price = getMinPrice(_token);\\n    uint256 decimals = tokenDecimals[_token];\\n    return _tokenAmount.mul(price).div(10**decimals);\\n  }\\n\\n  function usdToTokenMax(address _token, uint256 _usdAmount) public view returns (uint256) {\\n    if (_usdAmount == 0) {\\n      return 0;\\n    }\\n    return usdToToken(_token, _usdAmount, getMinPrice(_token));\\n  }\\n\\n  function usdToTokenMin(address _token, uint256 _usdAmount) public view returns (uint256) {\\n    if (_usdAmount == 0) {\\n      return 0;\\n    }\\n    return usdToToken(_token, _usdAmount, getMaxPrice(_token));\\n  }\\n\\n  function usdToToken(\\n    address _token,\\n    uint256 _usdAmount,\\n    uint256 _price\\n  ) public view returns (uint256) {\\n    if (_usdAmount == 0) {\\n      return 0;\\n    }\\n    uint256 decimals = tokenDecimals[_token];\\n    return _usdAmount.mul(10**decimals).div(_price);\\n  }\\n\\n  function getPosition(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong\\n  )\\n    public\\n    view\\n    override\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint256,\\n      bool,\\n      uint256\\n    )\\n  {\\n    bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n    Position memory position = positions[key];\\n    uint256 realisedPnl = position.realisedPnl > 0\\n      ? uint256(position.realisedPnl)\\n      : uint256(-position.realisedPnl);\\n    return (\\n      position.size, // 0\\n      position.collateral, // 1\\n      position.averagePrice, // 2\\n      position.entryFundingRate, // 3\\n      position.reserveAmount, // 4\\n      realisedPnl, // 5\\n      position.realisedPnl >= 0, // 6\\n      position.lastIncreasedTime // 7\\n    );\\n  }\\n\\n  function getPositionKey(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong\\n  ) public pure returns (bytes32) {\\n    return keccak256(abi.encodePacked(_account, _collateralToken, _indexToken, _isLong));\\n  }\\n\\n  function updateCumulativeFundingRate(address _collateralToken, address _indexToken) public {\\n    bool shouldUpdate = vaultUtils.updateCumulativeFundingRate(_collateralToken, _indexToken);\\n    if (!shouldUpdate) {\\n      return;\\n    }\\n\\n    if (lastFundingTimes[_collateralToken] == 0) {\\n      lastFundingTimes[_collateralToken] = block.timestamp.div(fundingInterval).mul(\\n        fundingInterval\\n      );\\n      return;\\n    }\\n\\n    if (lastFundingTimes[_collateralToken].add(fundingInterval) > block.timestamp) {\\n      return;\\n    }\\n\\n    uint256 fundingRate = getNextFundingRate(_collateralToken);\\n    cumulativeFundingRates[_collateralToken] = cumulativeFundingRates[_collateralToken].add(\\n      fundingRate\\n    );\\n    lastFundingTimes[_collateralToken] = block.timestamp.div(fundingInterval).mul(fundingInterval);\\n\\n    emit UpdateFundingRate(_collateralToken, cumulativeFundingRates[_collateralToken]);\\n  }\\n\\n  function getNextFundingRate(address _token) public view override returns (uint256) {\\n    if (lastFundingTimes[_token].add(fundingInterval) > block.timestamp) {\\n      return 0;\\n    }\\n\\n    uint256 intervals = block.timestamp.sub(lastFundingTimes[_token]).div(fundingInterval);\\n    uint256 poolAmount = poolAmounts[_token];\\n    if (poolAmount == 0) {\\n      return 0;\\n    }\\n\\n    uint256 _fundingRateFactor = stableTokens[_token] ? stableFundingRateFactor : fundingRateFactor;\\n    return _fundingRateFactor.mul(reservedAmounts[_token]).mul(intervals).div(poolAmount);\\n  }\\n\\n  function getUtilisation(address _token) public view returns (uint256) {\\n    uint256 poolAmount = poolAmounts[_token];\\n    if (poolAmount == 0) {\\n      return 0;\\n    }\\n\\n    return reservedAmounts[_token].mul(FUNDING_RATE_PRECISION).div(poolAmount);\\n  }\\n\\n  function getPositionLeverage(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong\\n  ) public view returns (uint256) {\\n    bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n    Position memory position = positions[key];\\n    _validate(position.collateral > 0, 37);\\n    return position.size.mul(BASIS_POINTS_DIVISOR).div(position.collateral);\\n  }\\n\\n  // for longs: nextAveragePrice = (nextPrice * nextSize)/ (nextSize + delta)\\n  // for shorts: nextAveragePrice = (nextPrice * nextSize) / (nextSize - delta)\\n  function getNextAveragePrice(\\n    address _indexToken,\\n    uint256 _size,\\n    uint256 _averagePrice,\\n    bool _isLong,\\n    uint256 _nextPrice,\\n    uint256 _sizeDelta,\\n    uint256 _lastIncreasedTime\\n  ) public view returns (uint256) {\\n    (bool hasProfit, uint256 delta) = getDelta(\\n      _indexToken,\\n      _size,\\n      _averagePrice,\\n      _isLong,\\n      _lastIncreasedTime\\n    );\\n    uint256 nextSize = _size.add(_sizeDelta);\\n    uint256 divisor;\\n    if (_isLong) {\\n      divisor = hasProfit ? nextSize.add(delta) : nextSize.sub(delta);\\n    } else {\\n      divisor = hasProfit ? nextSize.sub(delta) : nextSize.add(delta);\\n    }\\n    return _nextPrice.mul(nextSize).div(divisor);\\n  }\\n\\n  // for longs: nextAveragePrice = (nextPrice * nextSize)/ (nextSize + delta)\\n  // for shorts: nextAveragePrice = (nextPrice * nextSize) / (nextSize - delta)\\n  function getNextGlobalShortAveragePrice(\\n    address _indexToken,\\n    uint256 _nextPrice,\\n    uint256 _sizeDelta\\n  ) public view returns (uint256) {\\n    uint256 size = globalShortSizes[_indexToken];\\n    uint256 averagePrice = globalShortAveragePrices[_indexToken];\\n    uint256 priceDelta = averagePrice > _nextPrice\\n      ? averagePrice.sub(_nextPrice)\\n      : _nextPrice.sub(averagePrice);\\n    uint256 delta = size.mul(priceDelta).div(averagePrice);\\n    bool hasProfit = averagePrice > _nextPrice;\\n\\n    uint256 nextSize = size.add(_sizeDelta);\\n    uint256 divisor = hasProfit ? nextSize.sub(delta) : nextSize.add(delta);\\n\\n    return _nextPrice.mul(nextSize).div(divisor);\\n  }\\n\\n  function getGlobalShortDelta(address _token) public view returns (bool, uint256) {\\n    uint256 size = globalShortSizes[_token];\\n    if (size == 0) {\\n      return (false, 0);\\n    }\\n\\n    uint256 nextPrice = getMaxPrice(_token);\\n    uint256 averagePrice = globalShortAveragePrices[_token];\\n    uint256 priceDelta = averagePrice > nextPrice\\n      ? averagePrice.sub(nextPrice)\\n      : nextPrice.sub(averagePrice);\\n    uint256 delta = size.mul(priceDelta).div(averagePrice);\\n    bool hasProfit = averagePrice > nextPrice;\\n\\n    return (hasProfit, delta);\\n  }\\n\\n  function getPositionDelta(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong\\n  ) public view returns (bool, uint256) {\\n    bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n    Position memory position = positions[key];\\n    return\\n      getDelta(\\n        _indexToken,\\n        position.size,\\n        position.averagePrice,\\n        _isLong,\\n        position.lastIncreasedTime\\n      );\\n  }\\n\\n  function getDelta(\\n    address _indexToken,\\n    uint256 _size,\\n    uint256 _averagePrice,\\n    bool _isLong,\\n    uint256 _lastIncreasedTime\\n  ) public view override returns (bool, uint256) {\\n    _validate(_averagePrice > 0, 38);\\n    uint256 price = _isLong ? getMinPrice(_indexToken) : getMaxPrice(_indexToken);\\n    uint256 priceDelta = _averagePrice > price\\n      ? _averagePrice.sub(price)\\n      : price.sub(_averagePrice);\\n    uint256 delta = _size.mul(priceDelta).div(_averagePrice);\\n\\n    bool hasProfit;\\n\\n    if (_isLong) {\\n      hasProfit = price > _averagePrice;\\n    } else {\\n      hasProfit = _averagePrice > price;\\n    }\\n\\n    // if the minProfitTime has passed then there will be no min profit threshold\\n    // the min profit threshold helps to prevent front-running issues\\n    uint256 minBps = block.timestamp > _lastIncreasedTime.add(minProfitTime)\\n      ? 0\\n      : minProfitBasisPoints[_indexToken];\\n    if (hasProfit && delta.mul(BASIS_POINTS_DIVISOR) <= _size.mul(minBps)) {\\n      delta = 0;\\n    }\\n\\n    return (hasProfit, delta);\\n  }\\n\\n  function getEntryFundingRate(\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong\\n  ) public view returns (uint256) {\\n    return vaultUtils.getEntryFundingRate(_collateralToken, _indexToken, _isLong);\\n  }\\n\\n  function getFundingFee(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong,\\n    uint256 _size,\\n    uint256 _entryFundingRate\\n  ) public view returns (uint256) {\\n    return\\n      vaultUtils.getFundingFee(\\n        _account,\\n        _collateralToken,\\n        _indexToken,\\n        _isLong,\\n        _size,\\n        _entryFundingRate\\n      );\\n  }\\n\\n  function getPositionFee(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong,\\n    uint256 _sizeDelta\\n  ) public view returns (uint256) {\\n    return vaultUtils.getPositionFee(_account, _collateralToken, _indexToken, _isLong, _sizeDelta);\\n  }\\n\\n  // cases to consider\\n  // 1. initialAmount is far from targetAmount, action increases balance slightly => high rebate\\n  // 2. initialAmount is far from targetAmount, action increases balance largely => high rebate\\n  // 3. initialAmount is close to targetAmount, action increases balance slightly => low rebate\\n  // 4. initialAmount is far from targetAmount, action reduces balance slightly => high tax\\n  // 5. initialAmount is far from targetAmount, action reduces balance largely => high tax\\n  // 6. initialAmount is close to targetAmount, action reduces balance largely => low tax\\n  // 7. initialAmount is above targetAmount, nextAmount is below targetAmount and vice versa\\n  // 8. a large swap should have similar fees as the same trade split into multiple smaller swaps\\n  function getFeeBasisPoints(\\n    address _token,\\n    uint256 _usdgDelta,\\n    uint256 _feeBasisPoints,\\n    uint256 _taxBasisPoints,\\n    bool _increment\\n  ) public view override returns (uint256) {\\n    return\\n      vaultUtils.getFeeBasisPoints(\\n        _token,\\n        _usdgDelta,\\n        _feeBasisPoints,\\n        _taxBasisPoints,\\n        _increment\\n      );\\n  }\\n\\n  function getTargetUsdgAmount(address _token) public view override returns (uint256) {\\n    uint256 supply = IERC20(usdg).totalSupply();\\n    if (supply == 0) {\\n      return 0;\\n    }\\n    uint256 weight = tokenWeights[_token];\\n    return weight.mul(supply).div(totalTokenWeights);\\n  }\\n\\n  function _reduceCollateral(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    uint256 _collateralDelta,\\n    uint256 _sizeDelta,\\n    bool _isLong\\n  ) private returns (uint256, uint256) {\\n    bytes32 key = getPositionKey(_account, _collateralToken, _indexToken, _isLong);\\n    Position storage position = positions[key];\\n\\n    uint256 fee = _collectMarginFees(\\n      _account,\\n      _collateralToken,\\n      _indexToken,\\n      _isLong,\\n      _sizeDelta,\\n      position.size,\\n      position.entryFundingRate\\n    );\\n    bool hasProfit;\\n    uint256 adjustedDelta;\\n\\n    // scope variables to avoid stack too deep errors\\n    {\\n      (bool _hasProfit, uint256 delta) = getDelta(\\n        _indexToken,\\n        position.size,\\n        position.averagePrice,\\n        _isLong,\\n        position.lastIncreasedTime\\n      );\\n      hasProfit = _hasProfit;\\n      // get the proportional change in pnl\\n      adjustedDelta = _sizeDelta.mul(delta).div(position.size);\\n    }\\n\\n    uint256 usdOut;\\n    // transfer profits out\\n    if (hasProfit && adjustedDelta > 0) {\\n      usdOut = adjustedDelta;\\n      position.realisedPnl = position.realisedPnl + int256(adjustedDelta);\\n\\n      // pay out realised profits from the pool amount for short positions\\n      if (!_isLong) {\\n        uint256 tokenAmount = usdToTokenMin(_collateralToken, adjustedDelta);\\n        _decreasePoolAmount(_collateralToken, tokenAmount);\\n      }\\n    }\\n\\n    if (!hasProfit && adjustedDelta > 0) {\\n      position.collateral = position.collateral.sub(adjustedDelta);\\n\\n      // transfer realised losses to the pool for short positions\\n      // realised losses for long positions are not transferred here as\\n      // _increasePoolAmount was already called in increasePosition for longs\\n      if (!_isLong) {\\n        uint256 tokenAmount = usdToTokenMin(_collateralToken, adjustedDelta);\\n        _increasePoolAmount(_collateralToken, tokenAmount);\\n      }\\n\\n      position.realisedPnl = position.realisedPnl - int256(adjustedDelta);\\n    }\\n\\n    // reduce the position's collateral by _collateralDelta\\n    // transfer _collateralDelta out\\n    if (_collateralDelta > 0) {\\n      usdOut = usdOut.add(_collateralDelta);\\n      position.collateral = position.collateral.sub(_collateralDelta);\\n    }\\n\\n    // if the position will be closed, then transfer the remaining collateral out\\n    if (position.size == _sizeDelta) {\\n      usdOut = usdOut.add(position.collateral);\\n      position.collateral = 0;\\n    }\\n\\n    // if the usdOut is more than the fee then deduct the fee from the usdOut directly\\n    // else deduct the fee from the position's collateral\\n    uint256 usdOutAfterFee = usdOut;\\n    if (usdOut > fee) {\\n      usdOutAfterFee = usdOut.sub(fee);\\n    } else {\\n      position.collateral = position.collateral.sub(fee);\\n      if (_isLong) {\\n        uint256 feeTokens = usdToTokenMin(_collateralToken, fee);\\n        _decreasePoolAmount(_collateralToken, feeTokens);\\n      }\\n    }\\n\\n    emit UpdatePnl(key, hasProfit, adjustedDelta);\\n\\n    return (usdOut, usdOutAfterFee);\\n  }\\n\\n  function _validatePosition(uint256 _size, uint256 _collateral) private view {\\n    if (_size == 0) {\\n      _validate(_collateral == 0, 39);\\n      return;\\n    }\\n    _validate(_size >= _collateral, 40);\\n  }\\n\\n  function _validateRouter(address _account) private view {\\n    if (msg.sender == _account) {\\n      return;\\n    }\\n    if (msg.sender == router) {\\n      return;\\n    }\\n    _validate(approvedRouters[_account][msg.sender], 41);\\n  }\\n\\n  function _validateTokens(\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong\\n  ) private view {\\n    if (_isLong) {\\n      _validate(_collateralToken == _indexToken, 42);\\n      _validate(whitelistedTokens[_collateralToken], 43);\\n      _validate(!stableTokens[_collateralToken], 44);\\n      return;\\n    }\\n\\n    _validate(whitelistedTokens[_collateralToken], 45);\\n    _validate(stableTokens[_collateralToken], 46);\\n    _validate(!stableTokens[_indexToken], 47);\\n    _validate(shortableTokens[_indexToken], 48);\\n  }\\n\\n  function _collectSwapFees(\\n    address _token,\\n    uint256 _amount,\\n    uint256 _feeBasisPoints\\n  ) private returns (uint256) {\\n    uint256 afterFeeAmount = _amount.mul(BASIS_POINTS_DIVISOR.sub(_feeBasisPoints)).div(\\n      BASIS_POINTS_DIVISOR\\n    );\\n    uint256 feeAmount = _amount.sub(afterFeeAmount);\\n    feeReserves[_token] = feeReserves[_token].add(feeAmount);\\n    emit CollectSwapFees(_token, tokenToUsdMin(_token, feeAmount), feeAmount);\\n    return afterFeeAmount;\\n  }\\n\\n  function _collectMarginFees(\\n    address _account,\\n    address _collateralToken,\\n    address _indexToken,\\n    bool _isLong,\\n    uint256 _sizeDelta,\\n    uint256 _size,\\n    uint256 _entryFundingRate\\n  ) private returns (uint256) {\\n    uint256 feeUsd = getPositionFee(_account, _collateralToken, _indexToken, _isLong, _sizeDelta);\\n\\n    uint256 fundingFee = getFundingFee(\\n      _account,\\n      _collateralToken,\\n      _indexToken,\\n      _isLong,\\n      _size,\\n      _entryFundingRate\\n    );\\n    feeUsd = feeUsd.add(fundingFee);\\n\\n    uint256 feeTokens = usdToTokenMin(_collateralToken, feeUsd);\\n    feeReserves[_collateralToken] = feeReserves[_collateralToken].add(feeTokens);\\n\\n    emit CollectMarginFees(_collateralToken, feeUsd, feeTokens);\\n    return feeUsd;\\n  }\\n\\n  function _transferIn(address _token) private returns (uint256) {\\n    uint256 prevBalance = tokenBalances[_token];\\n    uint256 nextBalance = IERC20(_token).balanceOf(address(this));\\n    tokenBalances[_token] = nextBalance;\\n\\n    return nextBalance.sub(prevBalance);\\n  }\\n\\n  function _transferOut(\\n    address _token,\\n    uint256 _amount,\\n    address _receiver\\n  ) private {\\n    IERC20(_token).safeTransfer(_receiver, _amount);\\n    tokenBalances[_token] = IERC20(_token).balanceOf(address(this));\\n  }\\n\\n  function _updateTokenBalance(address _token) private {\\n    uint256 nextBalance = IERC20(_token).balanceOf(address(this));\\n    tokenBalances[_token] = nextBalance;\\n  }\\n\\n  function _increasePoolAmount(address _token, uint256 _amount) private {\\n    poolAmounts[_token] = poolAmounts[_token].add(_amount);\\n    uint256 balance = IERC20(_token).balanceOf(address(this));\\n    _validate(poolAmounts[_token] <= balance, 49);\\n    emit IncreasePoolAmount(_token, _amount);\\n  }\\n\\n  function _decreasePoolAmount(address _token, uint256 _amount) private {\\n    poolAmounts[_token] = poolAmounts[_token].sub(_amount, \\\"Vault: poolAmount exceeded\\\");\\n    _validate(reservedAmounts[_token] <= poolAmounts[_token], 50);\\n    emit DecreasePoolAmount(_token, _amount);\\n  }\\n\\n  function _validateBufferAmount(address _token) private view {\\n    if (poolAmounts[_token] < bufferAmounts[_token]) {\\n      revert(\\\"Vault: poolAmount < buffer\\\");\\n    }\\n  }\\n\\n  function _increaseUsdgAmount(address _token, uint256 _amount) private {\\n    usdgAmounts[_token] = usdgAmounts[_token].add(_amount);\\n    uint256 maxUsdgAmount = maxUsdgAmounts[_token];\\n    if (maxUsdgAmount != 0) {\\n      _validate(usdgAmounts[_token] <= maxUsdgAmount, 51);\\n    }\\n    emit IncreaseUsdgAmount(_token, _amount);\\n  }\\n\\n  function _decreaseUsdgAmount(address _token, uint256 _amount) private {\\n    uint256 value = usdgAmounts[_token];\\n    // since USDG can be minted using multiple assets\\n    // it is possible for the USDG debt for a single asset to be less than zero\\n    // the USDG debt is capped to zero for this case\\n    if (value <= _amount) {\\n      usdgAmounts[_token] = 0;\\n      emit DecreaseUsdgAmount(_token, value);\\n      return;\\n    }\\n    usdgAmounts[_token] = value.sub(_amount);\\n    emit DecreaseUsdgAmount(_token, _amount);\\n  }\\n\\n  function _increaseReservedAmount(address _token, uint256 _amount) private {\\n    reservedAmounts[_token] = reservedAmounts[_token].add(_amount);\\n    _validate(reservedAmounts[_token] <= poolAmounts[_token], 52);\\n    emit IncreaseReservedAmount(_token, _amount);\\n  }\\n\\n  function _decreaseReservedAmount(address _token, uint256 _amount) private {\\n    reservedAmounts[_token] = reservedAmounts[_token].sub(_amount, \\\"Vault: insufficient reserve\\\");\\n    emit DecreaseReservedAmount(_token, _amount);\\n  }\\n\\n  function _increaseGuaranteedUsd(address _token, uint256 _usdAmount) private {\\n    guaranteedUsd[_token] = guaranteedUsd[_token].add(_usdAmount);\\n    emit IncreaseGuaranteedUsd(_token, _usdAmount);\\n  }\\n\\n  function _decreaseGuaranteedUsd(address _token, uint256 _usdAmount) private {\\n    guaranteedUsd[_token] = guaranteedUsd[_token].sub(_usdAmount);\\n    emit DecreaseGuaranteedUsd(_token, _usdAmount);\\n  }\\n\\n  function _increaseGlobalShortSize(address _token, uint256 _amount) internal {\\n    globalShortSizes[_token] = globalShortSizes[_token].add(_amount);\\n\\n    uint256 maxSize = maxGlobalShortSizes[_token];\\n    if (maxSize != 0) {\\n      require(globalShortSizes[_token] <= maxSize, \\\"Vault: max shorts exceeded\\\");\\n    }\\n  }\\n\\n  function _decreaseGlobalShortSize(address _token, uint256 _amount) private {\\n    uint256 size = globalShortSizes[_token];\\n    if (_amount > size) {\\n      globalShortSizes[_token] = 0;\\n      return;\\n    }\\n\\n    globalShortSizes[_token] = size.sub(_amount);\\n  }\\n\\n  // we have this validation as a function instead of a modifier to reduce contract size\\n  function _onlyGov() private view {\\n    _validate(msg.sender == gov, 53);\\n  }\\n\\n  // we have this validation as a function instead of a modifier to reduce contract size\\n  function _validateManager() private view {\\n    if (inManagerMode) {\\n      _validate(isManager[msg.sender], 54);\\n    }\\n  }\\n\\n  // we have this validation as a function instead of a modifier to reduce contract size\\n  function _validateGasPrice() private view {\\n    if (maxGasPrice == 0) {\\n      return;\\n    }\\n    _validate(tx.gasprice <= maxGasPrice, 55);\\n  }\\n\\n  function _validate(bool _condition, uint256 _errorCode) private view {\\n    require(_condition, errors[_errorCode]);\\n  }\\n}\\n\",\"keccak256\":\"0x211022098d8b60f22d76d743da8274e7b764a82d900d03072f459160476128d3\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IVaultUtils.sol\\\";\\n\\ninterface IVault {\\n    function isInitialized() external view returns (bool);\\n    function isSwapEnabled() external view returns (bool);\\n    function isLeverageEnabled() external view returns (bool);\\n\\n    function setVaultUtils(IVaultUtils _vaultUtils) external;\\n    function setError(uint256 _errorCode, string calldata _error) external;\\n\\n    function router() external view returns (address);\\n    function usdg() external view returns (address);\\n    function gov() external view returns (address);\\n\\n    function whitelistedTokenCount() external view returns (uint256);\\n    function maxLeverage() external view returns (uint256);\\n\\n    function minProfitTime() external view returns (uint256);\\n    function hasDynamicFees() external view returns (bool);\\n    function fundingInterval() external view returns (uint256);\\n    function totalTokenWeights() external view returns (uint256);\\n    function getTargetUsdgAmount(address _token) external view returns (uint256);\\n\\n    function inManagerMode() external view returns (bool);\\n    function inPrivateLiquidationMode() external view returns (bool);\\n\\n    function maxGasPrice() external view returns (uint256);\\n\\n    function approvedRouters(address _account, address _router) external view returns (bool);\\n    function isLiquidator(address _account) external view returns (bool);\\n    function isManager(address _account) external view returns (bool);\\n\\n    function minProfitBasisPoints(address _token) external view returns (uint256);\\n    function tokenBalances(address _token) external view returns (uint256);\\n    function lastFundingTimes(address _token) external view returns (uint256);\\n\\n    function setMaxLeverage(uint256 _maxLeverage) external;\\n    function setInManagerMode(bool _inManagerMode) external;\\n    function setManager(address _manager, bool _isManager) external;\\n    function setIsSwapEnabled(bool _isSwapEnabled) external;\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external;\\n    function setMaxGasPrice(uint256 _maxGasPrice) external;\\n    function setUsdgAmount(address _token, uint256 _amount) external;\\n    function setBufferAmount(address _token, uint256 _amount) external;\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external;\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external;\\n    function setLiquidator(address _liquidator, bool _isActive) external;\\n\\n    function setFundingRate(uint256 _fundingInterval, uint256 _fundingRateFactor, uint256 _stableFundingRateFactor) external;\\n\\n    function setFees(\\n        uint256 _taxBasisPoints,\\n        uint256 _stableTaxBasisPoints,\\n        uint256 _mintBurnFeeBasisPoints,\\n        uint256 _swapFeeBasisPoints,\\n        uint256 _stableSwapFeeBasisPoints,\\n        uint256 _marginFeeBasisPoints,\\n        uint256 _liquidationFeeUsd,\\n        uint256 _minProfitTime,\\n        bool _hasDynamicFees\\n    ) external;\\n\\n    function setTokenConfig(\\n        address _token,\\n        uint256 _tokenDecimals,\\n        uint256 _redemptionBps,\\n        uint256 _minProfitBps,\\n        uint256 _maxUsdgAmount,\\n        bool _isStable,\\n        bool _isShortable\\n    ) external;\\n\\n    function setPriceFeed(address _priceFeed) external;\\n    function withdrawFees(address _token, address _receiver) external returns (uint256);\\n\\n    function directPoolDeposit(address _token) external;\\n    function buyUSDG(address _token, address _receiver) external returns (uint256);\\n    function sellUSDG(address _token, address _receiver) external returns (uint256);\\n    function swap(address _tokenIn, address _tokenOut, address _receiver) external returns (uint256);\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external;\\n    function decreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external returns (uint256);\\n    function validateLiquidation(address _account, address _collateralToken, address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function liquidatePosition(address _account, address _collateralToken, address _indexToken, bool _isLong, address _feeReceiver) external;\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function priceFeed() external view returns (address);\\n    function fundingRateFactor() external view returns (uint256);\\n    function stableFundingRateFactor() external view returns (uint256);\\n    function cumulativeFundingRates(address _token) external view returns (uint256);\\n    function getNextFundingRate(address _token) external view returns (uint256);\\n    function getFeeBasisPoints(address _token, uint256 _usdgDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n\\n    function liquidationFeeUsd() external view returns (uint256);\\n    function taxBasisPoints() external view returns (uint256);\\n    function stableTaxBasisPoints() external view returns (uint256);\\n    function mintBurnFeeBasisPoints() external view returns (uint256);\\n    function swapFeeBasisPoints() external view returns (uint256);\\n    function stableSwapFeeBasisPoints() external view returns (uint256);\\n    function marginFeeBasisPoints() external view returns (uint256);\\n\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n    function allWhitelistedTokens(uint256) external view returns (address);\\n    function whitelistedTokens(address _token) external view returns (bool);\\n    function stableTokens(address _token) external view returns (bool);\\n    function shortableTokens(address _token) external view returns (bool);\\n    function feeReserves(address _token) external view returns (uint256);\\n    function globalShortSizes(address _token) external view returns (uint256);\\n    function globalShortAveragePrices(address _token) external view returns (uint256);\\n    function maxGlobalShortSizes(address _token) external view returns (uint256);\\n    function tokenDecimals(address _token) external view returns (uint256);\\n    function tokenWeights(address _token) external view returns (uint256);\\n    function guaranteedUsd(address _token) external view returns (uint256);\\n    function poolAmounts(address _token) external view returns (uint256);\\n    function bufferAmounts(address _token) external view returns (uint256);\\n    function reservedAmounts(address _token) external view returns (uint256);\\n    function usdgAmounts(address _token) external view returns (uint256);\\n    function maxUsdgAmounts(address _token) external view returns (uint256);\\n    function getRedemptionAmount(address _token, uint256 _usdgAmount) external view returns (uint256);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n\\n    function getDelta(address _indexToken, uint256 _size, uint256 _averagePrice, bool _isLong, uint256 _lastIncreasedTime) external view returns (bool, uint256);\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256, uint256, uint256, uint256, uint256, uint256, bool, uint256);\\n}\\n\",\"keccak256\":\"0x247067b8f88636424e799a2b72b81884273813e62ad3bfedf428e0fb97714637\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IVaultPriceFeed {\\n    function adjustmentBasisPoints(address _token) external view returns (uint256);\\n    function isAdjustmentAdditive(address _token) external view returns (bool);\\n    function setAdjustment(address _token, bool _isAdditive, uint256 _adjustmentBps) external;\\n    function setUseV2Pricing(bool _useV2Pricing) external;\\n    function setIsAmmEnabled(bool _isEnabled) external;\\n    function setIsSecondaryPriceEnabled(bool _isEnabled) external;\\n    function setSpreadBasisPoints(address _token, uint256 _spreadBasisPoints) external;\\n    function setSpreadThresholdBasisPoints(uint256 _spreadThresholdBasisPoints) external;\\n    function setFavorPrimaryPrice(bool _favorPrimaryPrice) external;\\n    function setPriceSampleSpace(uint256 _priceSampleSpace) external;\\n    function setMaxStrictPriceDeviation(uint256 _maxStrictPriceDeviation) external;\\n    function getPrice(address _token, bool _maximise, bool _includeAmmPrice, bool _useSwapPricing) external view returns (uint256);\\n    function getAmmPrice(address _token) external view returns (uint256);\\n    function getLatestPrimaryPrice(address _token) external view returns (uint256);\\n    function getPrimaryPrice(address _token, bool _maximise) external view returns (uint256);\\n    function setTokenConfig(\\n        address _token,\\n        address _priceFeed,\\n        uint256 _priceDecimals,\\n        bool _isStrictStable\\n    ) external;\\n}\\n\",\"keccak256\":\"0xbfd3640bfd3ace2eaefb6f82ed2063d802ba3fa4bf87072269753508954ed84f\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IVaultUtils {\\n    function updateCumulativeFundingRate(address _collateralToken, address _indexToken) external returns (bool);\\n    function validateIncreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external view;\\n    function validateDecreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external view;\\n    function validateLiquidation(address _account, address _collateralToken, address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function getEntryFundingRate(address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256);\\n    function getPositionFee(address _account, address _collateralToken, address _indexToken, bool _isLong, uint256 _sizeDelta) external view returns (uint256);\\n    function getFundingFee(address _account, address _collateralToken, address _indexToken, bool _isLong, uint256 _size, uint256 _entryFundingRate) external view returns (uint256);\\n    function getBuyUsdgFeeBasisPoints(address _token, uint256 _usdgAmount) external view returns (uint256);\\n    function getSellUsdgFeeBasisPoints(address _token, uint256 _usdgAmount) external view returns (uint256);\\n    function getSwapFeeBasisPoints(address _tokenIn, address _tokenOut, uint256 _usdgAmount) external view returns (uint256);\\n    function getFeeBasisPoints(address _token, uint256 _usdgDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc8cad694c33f968559eb3feac2226fe26d81d457529b87ae8852390e1474d7be\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\"},\"contracts/libraries/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa3ce253082421a9e79d2b884ae6f60507b0cc73ea356674072091454c44cc556\",\"license\":\"MIT\"},\"contracts/libraries/token/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../math/SafeMath.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf80766b21ea67a73c81e0dea4543375243938c8b223e29c5d783be61ab3f424c\",\"license\":\"MIT\"},\"contracts/libraries/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1845481964ebacf35afe1a006fa574793b52e698eba0a8db6e3d30202bc45429\",\"license\":\"MIT\"},\"contracts/libraries/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xae7a1e407ed171ecd3a0d3976875d6c58eefdccf831ebce6314ec94892dffc03\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IUSDG.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IUSDG {\\n    function addVault(address _vault) external;\\n    function removeVault(address _vault) external;\\n    function mint(address _account, uint256 _amount) external;\\n    function burn(address _account, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x4ad9ae07a28607d414fa8509677ab4300bc1ca05768374b4a521ab681ff55172\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526001805462ff00001961ff00199091166101001716620100001781556207a1206008556032600a9081556014600b55601e600c819055600d556004600e55600f556011805460ff199081169091556170806012556016805463ffffff0019921690921716905534801561007657600080fd5b506001600055600680546001600160a01b03191633179055615ef4806200009e6000396000f3fe608060405234801561001057600080fd5b50600436106105995760003560e01c80638585f4d2116102e9578063c7e074c31161018f578063c7e074c314611225578063cea0c32814611265578063cfad57a21461129b578063d2fa635e146112c1578063d3127e63146112de578063d54d5a9f146112fb578063d66b000d1461135a578063d8f897c314611386578063d9ac4225146113ac578063da76524c146113b4578063daf9c210146113fe578063db3555fb14611424578063db97495f1461144a578063dc8f5fac14611496578063de2ea9481461149e578063df73a267146114e6578063e124e6d2146114ee578063e468baf014611514578063e67f59a714611531578063efa10a6e14611557578063f07456ce14611583578063f07bbf77146115a9578063f2555278146115c8578063f3ae2415146115f6578063f5b91b7b1461161c578063f887ea4014611624578063fa12dbc01461162c578063fbfded6d1461165e578063fce28c101461168c578063fdaf6ac314611694578063fed1a606146116d857610599565b80638585f4d214610e90578063870d917c14610ebc57806388b1fbdf14610ec45780638a27d46814610eea5780638a39735a1461061a5780638a78daa814610f135780638ee573ac14610f395780638f7b840414610f5f5780639060b1ca14610f855780639331621214610f8d57806395082d2514610fc55780639698d25a14610fcd5780639849e41214610ff35780639899cd0214610ffb5780639d7432ca146110275780639f392eb314611059578063a22f239214611061578063a42ab3d214611069578063a5e90eee14611095578063a93acac2146110c3578063ab08c1c6146110e9578063ab2f3ad4146110f1578063ad1e4f8d14611117578063ae3302c21461113d578063b06423f314611145578063b136ca491461114d578063b1cc53ab14611173578063b364accb146111ab578063c3c7b9e9146111d1578063c4f718bf146111f7578063c65bc7b1146111ff57610599565b80634453a3741161044e5780634453a3741461097057806345a6f3701461099e57806348d91abf146109f757806348f35cbb14610a3b5780634a3f088d14610a435780634a993ee914610ac45780634befe2ca14610aea5780634d47b30414610af2578063514ea4bf14610afa57806351723e8214610b4f578063523fba7f14610b8d578063529a356f14610bb357806352f55eed14610bd95780635c07eaab14610bff5780635f7bc11914610c3f5780636092219914610c6557806362287a3214610c935780636274980314610c9b5780636abbe0c814610cc15780636ae0b15414610cc95780636be6026b14610cef57806371089f4d14610cf7578063711e619014610d1d578063724e78da14610d4b578063728cdbca14610d71578063741bef1a14610db95780637a210a2b14610dc15780637c2eb9f714610dc9578063817bb85714610de857806381a612d614610e1657806382a0849014610e3c57610599565b806304fef1db1461059e57806307c58752146105d65780630842b076146105de5780630a48d5a9146105e657806310eb56c214610612578063126082cf1461061a57806312d43a5114610622578063134ca63b14610646578063174d26941461064e578063181e210e146106565780631aa4ace5146106725780631ce9cb8f1461069857806324b0c04d146106be57806324ca984e146106df57806328e67be51461070557806329ff96151461077a5780632c668ec1146107a05780632d4b0576146107cc57806330455ede1461080a578063318bc6891461082957806334c1557d1461061a578063351a964d14610831578063392e53cd146108395780633a05dcc1146108415780633c5a6e35146108675780633de39c11146108b55780633e72a262146108bd57806340eb3802146108c5578063421528731461091657806342b60b031461094a575b600080fd5b6105c4600480360360208110156105b457600080fd5b50356001600160a01b031661176a565b60408051918252519081900360200190f35b6105c46117cd565b6105c46117de565b6105c4600480360360408110156105fc57600080fd5b506001600160a01b0381351690602001356117e4565b6105c4611837565b6105c461183d565b61062a611843565b604080516001600160a01b039092168252519081900360200190f35b6105c4611852565b6105c4611858565b61065e61185e565b604080519115158252519081900360200190f35b6105c46004803603602081101561068857600080fd5b50356001600160a01b031661186e565b6105c4600480360360208110156106ae57600080fd5b50356001600160a01b0316611880565b6106dd600480360360208110156106d457600080fd5b50351515611892565b005b6106dd600480360360208110156106f557600080fd5b50356001600160a01b03166118b6565b6106dd6004803603604081101561071b57600080fd5b81359190810190604081016020820135600160201b81111561073c57600080fd5b82018360208201111561074e57600080fd5b803590602001918460018302840111600160201b8311171561076f57600080fd5b5090925090506118e7565b6105c46004803603602081101561079057600080fd5b50356001600160a01b0316611965565b6105c4600480360360408110156107b657600080fd5b506001600160a01b038135169060200135611979565b6105c4600480360360808110156107e257600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013515156119be565b6106dd6004803603602081101561082057600080fd5b50351515611a14565b6105c4611a36565b61065e611a3c565b61065e611a4a565b6105c46004803603602081101561085757600080fd5b50356001600160a01b0316611a53565b6106dd600480360360e081101561087d57600080fd5b506001600160a01b038135169060208101359060408101359060608101359060808101359060a081013515159060c001351515611b13565b6105c4611c55565b61065e611c5b565b6106dd60048036036101208110156108dc57600080fd5b5080359060208101359060408101359060608101359060808101359060a08101359060c08101359060e08101359061010001351515611c6a565b6105c46004803603606081101561092c57600080fd5b508035906001600160a01b0360208201358116916040013516611d24565b61065e6004803603602081101561096057600080fd5b50356001600160a01b0316611dc6565b6106dd6004803603604081101561098657600080fd5b506001600160a01b0381351690602001351515611ddb565b6109dc600480360360808110156109b457600080fd5b506001600160a01b038135811691602081013582169160408201351690606001351515611e0e565b60408051921515835260208301919091528051918290030190f35b6106dd600480360360a0811015610a0d57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013590608001351515611eac565b61062a6122eb565b610a8160048036036080811015610a5957600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013515156122fa565b604080519889526020890197909752878701959095526060870193909352608086019190915260a0850152151560c084015260e083015251908190036101000190f35b6105c460048036036020811015610ada57600080fd5b50356001600160a01b03166123f0565b6105c4612402565b6105c4612408565b610b1760048036036020811015610b1057600080fd5b503561240e565b604080519788526020880196909652868601949094526060860192909252608085015260a084015260c0830152519081900360e00190f35b6105c460048036036080811015610b6557600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135151561244b565b6105c460048036036020811015610ba357600080fd5b50356001600160a01b03166124f1565b61065e60048036036020811015610bc957600080fd5b50356001600160a01b0316612503565b6105c460048036036020811015610bef57600080fd5b50356001600160a01b0316612518565b6109dc600480360360a0811015610c1557600080fd5b506001600160a01b038135169060208101359060408101359060608101351515906080013561252a565b6106dd60048036036020811015610c5557600080fd5b50356001600160a01b0316612622565b61065e60048036036040811015610c7b57600080fd5b506001600160a01b0381358116916020013516612705565b6105c4612725565b6105c460048036036020811015610cb157600080fd5b50356001600160a01b031661272b565b61062a61273d565b6106dd60048036036020811015610cdf57600080fd5b50356001600160a01b0316612753565b6105c4612781565b6106dd60048036036020811015610d0d57600080fd5b50356001600160a01b0316612788565b6105c460048036036040811015610d3357600080fd5b506001600160a01b03813581169160200135166127bc565b6106dd60048036036020811015610d6157600080fd5b50356001600160a01b0316612a50565b6106dd600480360360c0811015610d8757600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060a00135612a7a565b61062a612af1565b6105c4612b00565b6106dd60048036036020811015610ddf57600080fd5b50351515612b06565b6105c460048036036040811015610dfe57600080fd5b506001600160a01b0381358116916020013516612b2a565b6105c460048036036020811015610e2c57600080fd5b50356001600160a01b0316612dfa565b6105c4600480360360e0811015610e5257600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a081013515159160c09091013516612ea5565b6106dd60048036036040811015610ea657600080fd5b506001600160a01b038135169060200135612f23565b6105c4612f47565b6105c460048036036020811015610eda57600080fd5b50356001600160a01b0316612f4c565b6106dd60048036036060811015610f0057600080fd5b5080359060208101359060400135612f5e565b6105c460048036036020811015610f2957600080fd5b50356001600160a01b0316612fa4565b6105c460048036036020811015610f4f57600080fd5b50356001600160a01b0316612fb6565b6106dd60048036036020811015610f7557600080fd5b50356001600160a01b0316612fc8565b61065e612ff2565b6105c460048036036060811015610fa357600080fd5b506001600160a01b038135811691602081013582169160409091013516613001565b6105c46132e9565b6105c460048036036020811015610fe357600080fd5b50356001600160a01b03166132f9565b6105c461330b565b6105c46004803603604081101561101157600080fd5b506001600160a01b038135169060200135613311565b6105c46004803603606081101561103d57600080fd5b506001600160a01b038135169060208101359060400135613333565b61065e6133dc565b6105c46133e5565b6105c46004803603604081101561107f57600080fd5b506001600160a01b0381351690602001356133eb565b6106dd600480360360408110156110ab57600080fd5b506001600160a01b0381351690602001351515613408565b6105c4600480360360208110156110d957600080fd5b50356001600160a01b031661343b565b61065e613539565b6105c46004803603602081101561110757600080fd5b50356001600160a01b0316613542565b6105c46004803603602081101561112d57600080fd5b50356001600160a01b0316613554565b6105c4613566565b61065e61356c565b6105c46004803603602081101561116357600080fd5b50356001600160a01b031661357a565b6105c46004803603606081101561118957600080fd5b506001600160a01b03813581169160208101359091169060400135151561361b565b6109dc600480360360208110156111c157600080fd5b50356001600160a01b03166136b6565b6105c4600480360360208110156111e757600080fd5b50356001600160a01b031661374e565b6105c4613760565b6105c46004803603602081101561121557600080fd5b50356001600160a01b0316613766565b6105c4600480360360a081101561123b57600080fd5b506001600160a01b0381351690602081013590604081013590606081013590608001351515613778565b6106dd6004803603606081101561127b57600080fd5b506001600160a01b03813581169160208101359091169060400135613822565b6106dd600480360360208110156112b157600080fd5b50356001600160a01b0316613843565b6106dd600480360360208110156112d757600080fd5b503561386d565b6106dd600480360360208110156112f457600080fd5b503561387a565b611341600480360360a081101561131157600080fd5b506001600160a01b0381358116916020810135821691604082013516906060810135151590608001351515613896565b6040805192835260208301919091528051918290030190f35b6106dd6004803603604081101561137057600080fd5b506001600160a01b03813516906020013561394d565b6105c46004803603602081101561139c57600080fd5b50356001600160a01b03166139a6565b6105c46139b8565b6105c4600480360360c08110156113ca57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013515159060808101359060a001356139be565b61065e6004803603602081101561141457600080fd5b50356001600160a01b0316613a72565b61065e6004803603602081101561143a57600080fd5b50356001600160a01b0316613a87565b6105c4600480360360e081101561146057600080fd5b506001600160a01b0381351690602081013590604081013590606081013515159060808101359060a08101359060c00135613a9b565b6105c4613b2c565b6106dd600480360360a08110156114b457600080fd5b506001600160a01b03813581169160208101358216916040820135811691606081013515159160809091013516613b32565b6105c4613f0a565b6105c46004803603602081101561150457600080fd5b50356001600160a01b0316613f10565b61062a6004803603602081101561152a57600080fd5b5035613f88565b6106dd6004803603602081101561154757600080fd5b50356001600160a01b0316613faf565b6106dd6004803603604081101561156d57600080fd5b506001600160a01b038135169060200135614082565b6105c46004803603602081101561159957600080fd5b50356001600160a01b03166140a6565b6106dd600480360360208110156115bf57600080fd5b503515156140b8565b6105c4600480360360408110156115de57600080fd5b506001600160a01b03813581169160200135166140de565b61065e6004803603602081101561160c57600080fd5b50356001600160a01b0316614134565b61062a614149565b61062a614158565b6105c46004803603606081101561164257600080fd5b506001600160a01b038135169060208101359060400135614167565b6106dd6004803603604081101561167457600080fd5b506001600160a01b03813581169160200135166141a1565b6105c461437a565b6105c4600480360360a08110156116aa57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013515159060800135614380565b6116f5600480360360208110156116ee57600080fd5b50356143f6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561172f578181015183820152602001611717565b50505050905090810190601f16801561175c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6001600160a01b038116600090815260256020526040812054806117925760009150506117c8565b6001600160a01b0383166000908152602660205260409020546117c49082906117be90620f4240614491565b906144ea565b9150505b919050565b6904ee2d6d415b85acef8160201b81565b601b5490565b6000816117f357506000611831565b60006117fe84612dfa565b6001600160a01b0385166000908152601d602052604090205490915061182c600a82900a6117be8685614491565b925050505b92915050565b600b5481565b61271081565b6006546001600160a01b031681565b60145481565b60095481565b6016546301000000900460ff1681565b60236020526000908152604090205481565b602c6020526000908152604090205481565b61189a614529565b60168054911515620100000262ff000019909216919091179055565b3360009081526018602090815260408083206001600160a01b0394909416835292905220805460ff19166001179055565b6002546001600160a01b03163314611946576040805162461bcd60e51b815260206004820152601e60248201527f5661756c743a20696e76616c6964206572726f72436f6e74726f6c6c65720000604482015290519081900360640190fd5b600083815260306020526040902061195f908383615dac565b50505050565b6000611831826119748461357a565b6117e4565b60008061198584613f10565b905060006119a3826117be8668327cb2734119d3b7a9601e1b614491565b60055490915061182c9082906001600160a01b031687611d24565b604080516001600160601b0319606096871b811660208084019190915295871b811660348301529390951b9092166048850152151560f81b605c8401528051603d818503018152605d9093019052815191012090565b611a1c614529565b600180549115156101000261ff0019909216919091179055565b600f5481565b600154610100900460ff1681565b60015460ff1681565b600080600560009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611aa457600080fd5b505afa158015611ab8573d6000803e3d6000fd5b505050506040513d6020811015611ace57600080fd5b5051905080611ae15760009150506117c8565b6001600160a01b038316600090815260226020526040902054601554611b0b906117be8385614491565b949350505050565b611b1b614529565b6001600160a01b0387166000908152601c602052604090205460ff16611b9857600754611b49906001614544565b600755601b80546001810182556000919091527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b0319166001600160a01b0389161790555b6015546001600160a01b038816600090815260226020526040902054611bbf90829061459c565b6001600160a01b0389166000908152601c602090815260408083208054600160ff1991821617909155601d83528184208c9055602283528184208b9055601e83528184208a905560248352818420899055601f83528184208054821689151517905591805290912080549091168415151790559050611c3e8187614544565b601555611c4a88613f10565b505050505050505050565b60175481565b60015462010000900460ff1681565b611c72614529565b611c826101f48a111560036145de565b611c926101f489111560046145de565b611ca26101f488111560056145de565b611cb26101f487111560066145de565b611cc26101f486111560076145de565b611cd26101f485111560086145de565b611ced6904ee2d6d415b85acef8160201b84111560096145de565b600a98909855600b96909655600c94909455600d92909255600e55600f556009556010556011805460ff1916911515919091179055565b60055460009081906001600160a01b03858116911614611d5c576001600160a01b0384166000908152601d6020526040902054611d5f565b60125b6005549091506000906001600160a01b03858116911614611d98576001600160a01b0384166000908152601d6020526040902054611d9b565b60125b9050611dba82600a0a6117be83600a0a8961449190919063ffffffff16565b925050505b9392505050565b601f6020526000908152604090205460ff1681565b611de3614529565b6001600160a01b03919091166000908152601960205260409020805460ff1916911515919091179055565b6000806000611e1f878787876119be565b9050611e29615e2a565b506000818152602b6020908152604091829020825160e081018452815480825260018301549382019390935260028201549381018490526003820154606082015260048201546080820152600582015460a082015260069091015460c082018190529092611e9d928992909190899061252a565b93509350505094509492505050565b60026000541415611ef2576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b6002600055600154611f0e9062010000900460ff16601c6145de565b611f1661468a565b611f1f856146a6565b611f2a848483614709565b60015460408051634eae147d60e11b81526001600160a01b038881166004830152878116602483015286811660448301526064820186905284151560848301529151630100000090930490911691639d5c28fa9160a480820192600092909190829003018186803b158015611f9e57600080fd5b505afa158015611fb2573d6000803e3d6000fd5b50505050611fc084846141a1565b6000611fce868686856119be565b6000818152602b6020526040812091925083611ff257611fed86612dfa565b611ffb565b611ffb86613f10565b825490915061200c57600282018190555b81541580159061201c5750600085115b156120425761203c868360000154846002015487858a8860060154613a9b565b60028301555b600061205b898989888a8860000154896003015461481e565b90506000612068896148ec565b905060006120768a836117e4565b60018601549091506120889082614544565b6001860181905561209d90841115601d6145de565b60018501546120ac908461459c565b60018601556120bc8a8a8961361b565b600386015584546120cd9089614544565b8086554260068701556120e3901515601e6145de565b6120f585600001548660010154614999565b6121038b8b8b8a6001613896565b505060006121118b8a6133eb565b60048701549091506121239082614544565b60048701556121328b826149bd565b87156121775761214b8b6121468b87614544565b614a5d565b6121558b83614adc565b61215f8b84614b5b565b6121728b61216d8d87613311565b614c73565b6121e3565b6001600160a01b038a166000908152602d60205260409020546121b4576001600160a01b038a166000908152602e602052604090208590556121d9565b6121bf8a868b613333565b6001600160a01b038b166000908152602e60205260409020555b6121e38a8a614d46565b604080518881526001600160a01b03808f166020830152808e16828401528c1660608201526080810184905260a081018b905289151560c082015260e08101879052610100810186905290517f2fe68525253654c21998f35787a8d0f361905ef647c854092430ab65f2f15022918190036101200190a1855460018701546002880154600389015460048a015460058b0154604080518e81526020810197909752868101959095526060860193909352608085019190915260a084015260c083015260e08201879052517f20853733b590dce729d9f4628682ebd9a34d2354e72679e66f43a008fc03b773918190036101000190a15050600160005550505050505050505050565b6002546001600160a01b031681565b60008060008060008060008060006123148d8d8d8d6119be565b905061231e615e2a565b602b60008381526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000808260a001511361239e578160a001516000036123a4565b8160a001515b9050816000015182602001518360400151846060015185608001518560008860a0015112158860c001519a509a509a509a509a509a509a509a5050505094995094995094999196509450565b60276020526000908152604090205481565b6101f481565b600c5481565b602b602052600090815260409020805460018201546002830154600384015460048501546005860154600690960154949593949293919290919087565b60008061245a868686866119be565b9050612464615e2a565b506000818152602b6020908152604091829020825160e0810184528154815260018201549281018390526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c08301526124ce90151560256145de565b602081015181516124e691906117be90612710614491565b979650505050505050565b60216020526000908152604090205481565b60196020526000908152604090205460ff1681565b60256020526000908152604090205481565b60008061253b6000861160266145de565b6000846125505761254b88613f10565b612559565b61255988612dfa565b905060008187116125735761256e828861459c565b61257d565b61257d878361459c565b9050600061258f886117be8b85614491565b9050600087156125a257508783116125a7565b508288115b60006125be6010548961454490919063ffffffff16565b42116125e2576001600160a01b038c166000908152601e60205260409020546125e5565b60005b905081801561260857506125f98b82614491565b61260584612710614491565b11155b1561261257600092505b509a909950975050505050505050565b60026000541415612668576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b600260009081556001600160a01b0382168152601c60205260409020546126939060ff16600e6145de565b600061269e826148ec565b90506126ae60008211600f6145de565b6126b88282614b5b565b604080516001600160a01b03841681526020810183905281517fa5a389190ebf6170a133bda5c769b77f4d6715b8aa172ec0ddf8473d0b4944bd929181900390910190a150506001600055565b601860209081526000928352604080842090915290825290205460ff1681565b60075481565b602e6020526000908152604090205481565b600154630100000090046001600160a01b031681565b3360009081526018602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b620f424081565b612790614529565b600180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b600060026000541415612804576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b6002600055612811614dfe565b6001600160a01b0383166000908152601c60205260409020546128389060ff1660136145de565b6016805461ff00191661010017905560055460009061285f906001600160a01b03166148ec565b905061286f6000821160146145de565b61287984856141a1565b60006128858583611979565b90506128956000821160156145de565b61289f8583614e2d565b6128a98582614c73565b60055460408051632770a7eb60e21b81523060048201526024810185905290516001600160a01b0390921691639dc29fac9160448082019260009290919082900301818387803b1580156128fc57600080fd5b505af1158015612910573d6000803e3d6000fd5b505060055461292a92506001600160a01b03169050614f0f565b6001546040805163eb0835bf60e01b81526001600160a01b038881166004830152602482018690529151600093630100000090049092169163eb0835bf91604480820192602092909190829003018186803b15801561298857600080fd5b505afa15801561299c573d6000803e3d6000fd5b505050506040513d60208110156129b257600080fd5b5051905060006129c3878484614faa565b90506129d36000821160166145de565b6129de878288615072565b604080516001600160a01b03808916825289166020820152808201869052606081018390526080810184905290517fd732b7828fa6cee72c285eac756fc66a7477e3dc22e22e7c432f1c265d40b4839181900360a00190a16016805461ff001916905560016000559695505050505050565b612a58614529565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b612a82614529565b60018054612a969160ff90911615906145de565b6001805460ff191681179055600380546001600160a01b03199081166001600160a01b039889161790915560058054821696881696909617909555600480549095169390951692909217909255600991909155601355601455565b6004546001600160a01b031681565b600a5481565b612b0e614529565b60018054911515620100000262ff000019909216919091179055565b600060026000541415612b72576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b6002600055612b7f614dfe565b6001600160a01b0383166000908152601c6020526040902054612ba69060ff1660106145de565b6016805461ff0019166101001790556000612bc0846148ec565b9050612bd06000821160116145de565b612bda84856141a1565b6000612be585612dfa565b90506000612c0368327cb2734119d3b7a9601e1b6117be8585614491565b600554909150612c1f90829088906001600160a01b0316611d24565b9050612c2f6000821160126145de565b6001546040805163256f6ee360e11b81526001600160a01b0389811660048301526024820185905291516000936301000000900490921691634adeddc691604480820192602092909190829003018186803b158015612c8d57600080fd5b505afa158015612ca1573d6000803e3d6000fd5b505050506040513d6020811015612cb757600080fd5b505190506000612cc8888684614faa565b90506000612ce668327cb2734119d3b7a9601e1b6117be8488614491565b600554909150612d029082908b906001600160a01b0316611d24565b9050612d0e8982615119565b612d188983614b5b565b600554604080516340c10f1960e01b81526001600160a01b038b8116600483015260248201859052915191909216916340c10f1991604480830192600092919082900301818387803b158015612d6d57600080fd5b505af1158015612d81573d6000803e3d6000fd5b5050604080516001600160a01b03808d1682528d1660208201528082018a9052606081018590526080810187905290517fab4c77c74cd32c85f35416cf03e7ce9e2d4387f7b7f2c1f4bf53daaecf8ea72d93509081900360a0019150a16016805461ff0019169055600160005598975050505050505050565b60048054601654604080516317e1d38560e11b81526001600160a01b038681169582019590955260006024820181905260ff80851615156044840152610100909404909316151560648201529051919390921691632fc3a70a916084808301926020929190829003018186803b158015612e7357600080fd5b505afa158015612e87573d6000803e3d6000fd5b505050506040513d6020811015612e9d57600080fd5b505192915050565b600060026000541415612eed576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b6002600055612efa61468a565b612f03886146a6565b612f12888888888888886151d7565b600160005598975050505050505050565b612f2b614529565b6001600160a01b03909116600090815260276020526040902055565b601281565b601e6020526000908152604090205481565b612f66614529565b612f76610e10841015600a6145de565b612f86612710831115600b6145de565b612f96612710821115600c6145de565b601292909255601355601455565b602d6020526000908152604090205481565b601d6020526000908152604090205481565b612fd0614529565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60165462010000900460ff1681565b600060026000541415613049576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b600260005560015461306490610100900460ff1660176145de565b6001600160a01b0384166000908152601c602052604090205461308b9060ff1660186145de565b6001600160a01b0383166000908152601c60205260409020546130b29060ff1660196145de565b6130d2836001600160a01b0316856001600160a01b03161415601a6145de565b6016805461ff0019166101001790556130eb84806141a1565b6130f583846141a1565b6000613100856148ec565b905061311060008211601b6145de565b600061311b86612dfa565b9050600061312886613f10565b9050600061313a826117be8686614491565b9050613147818989611d24565b9050600061316568327cb2734119d3b7a9601e1b6117be8787614491565b6005549091506131819082908b906001600160a01b0316611d24565b60015460408051636d099c0b60e11b81526001600160a01b038d811660048301528c8116602483015260448201859052915193945060009363010000009093049091169163da13381691606480820192602092909190829003018186803b1580156131eb57600080fd5b505afa1580156131ff573d6000803e3d6000fd5b505050506040513d602081101561321557600080fd5b5051905060006132268a8584614faa565b90506132328b84615119565b61323c8a84614e2d565b6132468b88614b5b565b6132508a85614c73565b6132598a61569a565b6132648a828b615072565b604080516001600160a01b03808c168252808e1660208301528c1681830152606081018990526080810186905260a0810183905260c0810184905290517f0874b2d545cb271cdbda4e093020c452328b24af12382ed62c4d00f5c26709db9181900360e00190a16016805461ff001916905560016000559a9950505050505050505050565b68327cb2734119d3b7a9601e1b81565b602f6020526000908152604090205481565b60125481565b60008161332057506000611831565b611dbf838361332e86613f10565b614167565b6001600160a01b0383166000908152602d6020908152604080832054602e9092528220548285821161336e57613369868361459c565b613378565b613378828761459c565b9050600061338a836117be8685614491565b9050868311600061339b8689614544565b90506000826133b3576133ae8285614544565b6133bd565b6133bd828561459c565b90506133cd816117be8c85614491565b9b9a5050505050505050505050565b60115460ff1681565b600d5481565b6000816133fa57506000611831565b611dbf838361332e86612dfa565b613410614529565b6001600160a01b03919091166000908152601a60205260409020805460ff1916911515919091179055565b6012546001600160a01b0382166000908152602a60205260408120549091429161346491614544565b1115613472575060006117c8565b6012546001600160a01b0383166000908152602a6020526040812054909161349f916117be90429061459c565b6001600160a01b038416600090815260256020526040902054909150806134cb576000925050506117c8565b6001600160a01b0384166000908152601f602052604081205460ff166134f3576013546134f7565b6014545b6001600160a01b0386166000908152602660205260409020549091506135309083906117be90869061352a908690614491565b90614491565b95945050505050565b60165460ff1681565b60226020526000908152604090205481565b60246020526000908152604090205481565b60085481565b601654610100900460ff1681565b6001600160a01b0381166000908152601f602052604081205460ff16156135ba57506001600160a01b0381166000908152602560205260409020546117c8565b6001600160a01b0382166000908152602860205260408120546135de908490613311565b6001600160a01b0384166000908152602660209081526040808320546025909252909120549192506117c491613615908490614544565b9061459c565b6001546040805163b1cc53ab60e01b81526001600160a01b038681166004830152858116602483015284151560448301529151600093630100000090049092169163b1cc53ab91606480820192602092909190829003018186803b15801561368257600080fd5b505afa158015613696573d6000803e3d6000fd5b505050506040513d60208110156136ac57600080fd5b5051949350505050565b6001600160a01b0381166000908152602d60205260408120548190806136e3576000809250925050613749565b60006136ee85613f10565b6001600160a01b0386166000908152602e60205260408120549192508282116137205761371b838361459c565b61372a565b61372a828461459c565b9050600061373c836117be8785614491565b9390921195509193505050505b915091565b60266020526000908152604090205481565b60135481565b60296020526000908152604090205481565b6001546040805163c7e074c360e01b81526001600160a01b03888116600483015260248201889052604482018790526064820186905284151560848301529151600093630100000090049092169163c7e074c39160a480820192602092909190829003018186803b1580156137ec57600080fd5b505afa158015613800573d6000803e3d6000fd5b505050506040513d602081101561381657600080fd5b50519695505050505050565b61382a614529565b61383e6001600160a01b038316848361570f565b505050565b61384b614529565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b613875614529565b601755565b613882614529565b613891612710821160026145de565b600855565b6001546040805163d54d5a9f60e01b81526001600160a01b03888116600483015287811660248301528681166044830152851515606483015284151560848301528251600094859463010000009091049092169263d54d5a9f9260a4808301939192829003018186803b15801561390c57600080fd5b505afa158015613920573d6000803e3d6000fd5b505050506040513d604081101561393657600080fd5b508051602090910151909890975095505050505050565b613955614529565b6001600160a01b0382166000908152602360205260409020548082111561398f5761398983613984848461459c565b615119565b506139a2565b61383e8361399d838561459c565b614e2d565b5050565b602a6020526000908152604090205481565b60105481565b6001546040805163369d949360e21b81526001600160a01b0389811660048301528881166024830152878116604483015286151560648301526084820186905260a482018590529151600093630100000090049092169163da76524c9160c480820192602092909190829003018186803b158015613a3b57600080fd5b505afa158015613a4f573d6000803e3d6000fd5b505050506040513d6020811015613a6557600080fd5b5051979650505050505050565b601c6020526000908152604090205460ff1681565b602080526000908152604090205460ff1681565b6000806000613aad8a8a8a8a8861252a565b90925090506000613abe8a87614544565b905060008815613aed5783613adc57613ad7828461459c565b613ae6565b613ae68284614544565b9050613b0e565b83613b0157613afc8284614544565b613b0b565b613b0b828461459c565b90505b613b1c816117be8a85614491565b9c9b505050505050505050505050565b60155481565b60026000541415613b78576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b60026000556016546301000000900460ff1615613bad5733600090815260196020526040902054613bad9060ff1660226145de565b6016805460ff19169055613bc184846141a1565b6000613bcf868686866119be565b9050613bd9615e2a565b506000818152602b6020908152604091829020825160e08101845281548082526001830154938201939093526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c0830152613c4590151560236145de565b600080613c56898989896000613896565b91509150613c69826000141560246145de565b8160021415613c9e57613c86898989600087600001518b8f6151d7565b50506016805460ff1916600117905550613efe915050565b6000613caa8983613311565b6001600160a01b038a166000908152602c6020526040902054909150613cd09082614544565b6001600160a01b038a166000818152602c602090815260409182902093909355805191825291810184905280820183905290517f5d0c0019d3d45fadeb74eff9d2c9924d146d000ac6bcf3c28bf0ac3c9baa011a9181900360600190a1613d3b898560800151615761565b8615613d6a5760208401518451613d5c918b91613d579161459c565b614adc565b613d6a8961216d8b85613311565b600087613d7f57613d7a89613f10565b613d88565b613d8889612dfa565b90507f2e1f85a64a2f22cf2f0c42584e7c919ed4abe8d53675cff0f62bf1e95a1c676f868c8c8c8c8a600001518b602001518c608001518d60a001518a604051808b81526020018a6001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b0316815260200187151581526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a187158015613e475750846020015183105b15613e75576020850151600090613e5e908561459c565b9050613e738b613e6e8d84613311565b614b5b565b505b87613e8857613e88898660000151615816565b6000868152602b60205260408120818155600181018290556002810182905560038101829055600481018290556005810182905560060155600954613ed4908b9061216d908290613311565b613eea8a613ee48c600954613311565b89615072565b50506016805460ff19166001179055505050505b50506001600055505050565b600e5481565b60048054601654604080516317e1d38560e11b81526001600160a01b03868116958201959095526001602482015260ff80841615156044830152610100909304909216151560648301525160009390921691632fc3a70a91608480820192602092909190829003018186803b158015612e7357600080fd5b601b8181548110613f9557fe5b6000918252602090912001546001600160a01b0316905081565b613fb7614529565b6001600160a01b0381166000908152601c6020526040902054613fde9060ff16600d6145de565b6001600160a01b0381166000908152602260205260409020546015546140039161459c565b6015556001600160a01b0381166000908152601c60209081526040808320805460ff19908116909155601d835281842084905560228352818420849055601e835281842084905560248352818420849055601f83528184208054821690559180529091208054909116905560075461407c90600161459c565b60075550565b61408a614529565b6001600160a01b039091166000908152602f6020526040902055565b60286020526000908152604090205481565b6140c0614529565b6016805491151563010000000263ff00000019909216919091179055565b60006140e8614529565b6001600160a01b0383166000908152602c602052604090205480614110576000915050611831565b6001600160a01b0384166000908152602c6020526040812055611dbf848285615072565b601a6020526000908152604090205460ff1681565b6005546001600160a01b031681565b6003546001600160a01b031681565b60008261417657506000611dbf565b6001600160a01b0384166000908152601d6020526040902054613530836117be86600a85900a614491565b6001546040805163fbfded6d60e01b81526001600160a01b03858116600483015284811660248301529151600093630100000090049092169163fbfded6d9160448082019260209290919082900301818787803b15801561420157600080fd5b505af1158015614215573d6000803e3d6000fd5b505050506040513d602081101561422b57600080fd5b505190508061423a57506139a2565b6001600160a01b0383166000908152602a6020526040902054614287576012546142689061352a42826144ea565b6001600160a01b0384166000908152602a6020526040902055506139a2565b6012546001600160a01b0384166000908152602a602052604090205442916142af9190614544565b11156142bb57506139a2565b60006142c68461343b565b6001600160a01b0385166000908152602960205260409020549091506142ec9082614544565b6001600160a01b0385166000908152602960205260409020556012546143169061352a42826144ea565b6001600160a01b0385166000818152602a602090815260408083209490945560298152908390205483519283529082015281517fa146fc154e1913322e9817d49f0d5c37466c24326e15de10e739a948be815eab929181900390910190a150505050565b610e1081565b6001546040805163fdaf6ac360e01b81526001600160a01b038881166004830152878116602483015286811660448301528515156064830152608482018590529151600093630100000090049092169163fdaf6ac39160a480820192602092909190829003018186803b1580156137ec57600080fd5b60306020908152600091825260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156144895780601f1061445e57610100808354040283529160200191614489565b820191906000526020600020905b81548152906001019060200180831161446c57829003601f168201915b505050505081565b6000826144a057506000611831565b828202828482816144ad57fe5b0414611dbf5760405162461bcd60e51b8152600401808060200182810382526021815260200180615e9d6021913960400191505060405180910390fd5b6000611dbf83836040518060400160405280601a815260200179536166654d6174683a206469766973696f6e206279207a65726f60301b81525061587e565b600654614542906001600160a01b0316331460356145de565b565b600082820183811015611dbf576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b6000611dbf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250615920565b60008181526030602052604090208261383e5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561467b5780601f106146505761010080835404028352916020019161467b565b820191906000526020600020905b81548152906001019060200180831161465e57829003601f168201915b50509250505060405180910390fd5b60175461469657614542565b6145426017543a111560376145de565b336001600160a01b03821614156146bc57614706565b6003546001600160a01b03163314156146d457614706565b6001600160a01b03811660009081526018602090815260408083203384529091529020546147069060ff1660296145de565b50565b80156147825761472e826001600160a01b0316846001600160a01b031614602a6145de565b6001600160a01b0383166000908152601c60205260409020546147559060ff16602b6145de565b6001600160a01b0383166000908152601f602052604090205461477d9060ff1615602c6145de565b61383e565b6001600160a01b0383166000908152601c60205260409020546147a99060ff16602d6145de565b6001600160a01b0383166000908152601f60205260409020546147d09060ff16602e6145de565b6001600160a01b0382166000908152601f60205260409020546147f89060ff1615602f6145de565b6001600160a01b038216600090815260208052604090205461383e9060ff1660306145de565b60008061482e8989898989614380565b905060006148408a8a8a8a89896139be565b905061484c8282614544565b9150600061485a8a84613311565b6001600160a01b038b166000908152602c60205260409020549091506148809082614544565b6001600160a01b038b166000818152602c602090815260409182902093909355805191825291810185905280820183905290517f5d0c0019d3d45fadeb74eff9d2c9924d146d000ac6bcf3c28bf0ac3c9baa011a9181900360600190a150909998505050505050505050565b6001600160a01b03811660008181526021602090815260408083205481516370a0823160e01b8152306004820152915193949093859391926370a08231926024808301939192829003018186803b15801561494657600080fd5b505afa15801561495a573d6000803e3d6000fd5b505050506040513d602081101561497057600080fd5b50516001600160a01b03851660009081526021602052604090208190559050611b0b818361459c565b816149af576149aa811560276145de565b6139a2565b6139a28183101560286145de565b6001600160a01b0382166000908152602660205260409020546149e09082614544565b6001600160a01b038316600090815260266020818152604080842085905560258252909220549152614a1591111560346145de565b604080516001600160a01b03841681526020810183905281517faa5649d82f5462be9d19b0f2b31a59b2259950a6076550bac9f3a1c07db9f66d929181900390910190a15050565b6001600160a01b038216600090815260286020526040902054614a809082614544565b6001600160a01b03831660008181526028602090815260409182902093909355805191825291810183905281517fd9d4761f75e0d0103b5cbeab941eeb443d7a56a35b5baf2a0787c03f03f4e474929181900390910190a15050565b6001600160a01b038216600090815260286020526040902054614aff908261459c565b6001600160a01b03831660008181526028602090815260409182902093909355805191825291810183905281517f34e07158b9db50df5613e591c44ea2ebc82834eff4a4dc3a46e000e608261d68929181900390910190a15050565b6001600160a01b038216600090815260256020526040902054614b7e9082614544565b6001600160a01b03831660008181526025602090815260408083209490945583516370a0823160e01b8152306004820152935191936370a082319260248083019392829003018186803b158015614bd457600080fd5b505afa158015614be8573d6000803e3d6000fd5b505050506040513d6020811015614bfe57600080fd5b50516001600160a01b038416600090815260256020526040902054909150614c2a9082101560316145de565b604080516001600160a01b03851681526020810184905281517f976177fbe09a15e5e43f848844963a42b41ef919ef17ff21a17a5421de8f4737929181900390910190a1505050565b604080518082018252601a81527915985d5b1d0e881c1bdbdb105b5bdd5b9d08195e18d95959195960321b6020808301919091526001600160a01b038516600090815260259091529190912054614ccb918390615920565b6001600160a01b03831660009081526025602090815260408083208490556026909152902054614cfe91101560326145de565b604080516001600160a01b03841681526020810183905281517f112726233fbeaeed0f5b1dba5cb0b2b81883dee49fb35ff99fd98ed9f6d31eb0929181900390910190a15050565b6001600160a01b0382166000908152602d6020526040902054614d699082614544565b6001600160a01b0383166000908152602d6020908152604080832093909355602f90522054801561383e576001600160a01b0383166000908152602d602052604090205481101561383e576040805162461bcd60e51b815260206004820152601a60248201527915985d5b1d0e881b585e081cda1bdc9d1cc8195e18d95959195960321b604482015290519081900360640190fd5b60165462010000900460ff161561454257336000908152601a60205260409020546145429060ff1660366145de565b6001600160a01b038216600090815260236020526040902054818111614ea8576001600160a01b0383166000818152602360209081526040808320929092558151928352820183905280517fe1e812596aac93a06ecc4ca627014d18e30f5c33b825160cc9d5c0ba61e452279281900390910190a1506139a2565b614eb2818361459c565b6001600160a01b03841660008181526023602090815260409182902093909355805191825291810184905281517fe1e812596aac93a06ecc4ca627014d18e30f5c33b825160cc9d5c0ba61e45227929181900390910190a1505050565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015614f5e57600080fd5b505afa158015614f72573d6000803e3d6000fd5b505050506040513d6020811015614f8857600080fd5b50516001600160a01b0390921660009081526021602052604090209190915550565b600080614fc76127106117be614fc0828761459c565b8790614491565b90506000614fd5858361459c565b6001600160a01b0387166000908152602c6020526040902054909150614ffb9082614544565b6001600160a01b0387166000908152602c60205260409020557f47cd9dda0e50ce30bcaaacd0488452b596221c07ac402a581cfae4d3933cac2b8661504081846117e4565b604080516001600160a01b0390931683526020830191909152818101849052519081900360600190a150949350505050565b6150866001600160a01b038416828461570f565b604080516370a0823160e01b815230600482015290516001600160a01b038516916370a08231916024808301926020929190829003018186803b1580156150cc57600080fd5b505afa1580156150e0573d6000803e3d6000fd5b505050506040513d60208110156150f657600080fd5b50516001600160a01b039093166000908152602160205260409020929092555050565b6001600160a01b03821660009081526023602052604090205461513c9082614544565b6001600160a01b038316600090815260236020908152604080832093909355602490522054801561518e576001600160a01b03831660009081526023602052604090205461518e9082101560336145de565b604080516001600160a01b03851681526020810184905281517f64243679a443432e2293343b77d411ff6144370404618f00ca0d2025d9ca9882929181900390910190a1505050565b600154604080516381d11a2360e01b81526001600160a01b038a8116600483015289811660248301528881166044830152606482018890526084820187905285151560a483015284811660c4830152915160009363010000009004909216916381d11a239160e4808201928692909190829003018186803b15801561525b57600080fd5b505afa15801561526f573d6000803e3d6000fd5b5050505061527d87876141a1565b600061528b898989876119be565b6000818152602b602052604090208054919250906152ac901515601f6145de565b6152be868260000154101560206145de565b6152d0878260010154101560216145de565b6001810154815460048301546000916152ed916117be908b614491565b60048401549091506152ff908261459c565b600484015561530e8b82615761565b506000806153208d8d8d8d8d8d61597a565b8554919350915089146154c4576153388c8c8a61361b565b60038501558354615349908a61459c565b808555600185015461535b9190614999565b6153698d8d8d8b6001613896565b505087156153965761538c8c61214686600101548661459c90919063ffffffff16565b6153968c8a614adc565b6000886153ab576153a68c613f10565b6153b4565b6153b48c612dfa565b90507f93d75d64d1f84fc6f430a64fc578bdd4c1e090e90ea2d51773e626d19de56d30868f8f8f8f8f8f886153e98c8c61459c565b60408051998a526001600160a01b0398891660208b015296881689880152949096166060880152608087019290925260a0860152151560c085015260e084019290925261010083019190915251908190036101200190a18454600186015460028701546003880154600489015460058a0154604080518d81526020810197909752868101959095526060860193909352608085019190915260a084015260c083015260e08201839052517f20853733b590dce729d9f4628682ebd9a34d2354e72679e66f43a008fc03b773918190036101000190a150615638565b87156154de576154d48c84614a5d565b6154de8c8a614adc565b6000886154f3576154ee8c613f10565b6154fc565b6154fc8c612dfa565b90507f93d75d64d1f84fc6f430a64fc578bdd4c1e090e90ea2d51773e626d19de56d30868f8f8f8f8f8f886155318c8c61459c565b60408051998a526001600160a01b0398891660208b015296881689880152949096166060880152608087019290925260a0860152151560c085015260e084019290925261010083019190915251908190036101200190a18454600186015460028701546003880154600489015460058a0154604080518d81526020810197909752868101959095526060860193909352608085019190915260a084015260c0830152517f73af1d417d82c240fdb6d319b34ad884487c6bf2845d98980cc52ad9171cb4559181900360e00190a1506000858152602b602052604081208181556001810182905560028101829055600381018290556004810182905560058101829055600601555b87615647576156478b8a615816565b8115615687578715615661576156618c61216d8e85613311565b600061566d8d83613311565b905061567a8d828a615072565b95506124e6945050505050565b5060009c9b505050505050505050505050565b6001600160a01b0381166000908152602760209081526040808320546025909252909120541015614706576040805162461bcd60e51b815260206004820152601a6024820152792b30bab63a1d103837b7b620b6b7bab73a101e10313ab33332b960311b604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261383e908490615b74565b604080518082018252601b81527a5661756c743a20696e73756666696369656e74207265736572766560281b6020808301919091526001600160a01b0385166000908152602690915291909120546157ba918390615920565b6001600160a01b03831660008181526026602090815260409182902093909355805191825291810183905281517f533cb5ed32be6a90284e96b5747a1bfc2d38fdb5768a6b5f67ff7d62144ed67b929181900390910190a15050565b6001600160a01b0382166000908152602d60205260409020548082111561585657506001600160a01b0382166000908152602d60205260408120556139a2565b615860818361459c565b6001600160a01b0384166000908152602d6020526040902055505050565b6000818361590a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156158cf5781810151838201526020016158b7565b50505050905090810190601f1680156158fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161591657fe5b0495945050505050565b600081848411156159725760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156158cf5781810151838201526020016158b7565b505050900390565b600080600061598b898989876119be565b6000818152602b602052604081208054600382015493945090926159b8918d918d918d918b918d9161481e565b90506000806000806159d98d876000015488600201548d8a6006015461252a565b875491955085935091506159f1906117be8d84614491565b925050506000828015615a045750600082115b15615a345750600584018054820190558088615a34576000615a268e84613311565b9050615a328e82614c73565b505b82158015615a425750600082115b15615a86576001850154615a56908361459c565b600186015588615a7a576000615a6c8e84613311565b9050615a788e82614b5b565b505b60058501805483900390555b8a15615aae57615a96818c614544565b6001860154909150615aa8908c61459c565b60018601555b84548a1415615ad1576001850154615ac7908290614544565b6000600187015590505b8084811115615aeb57615ae4828661459c565b9050615b1f565b6001860154615afa908661459c565b60018701558915615b1f576000615b118f87613311565b9050615b1d8f82614c73565b505b60408051888152851515602082015280820185905290517f3ff41bdde87755b687ae83d0221a232b6be51a803330ed9661c1b5d0105e0d8a9181900360600190a1909e909d509b505050505050505050505050565b6060615bc9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316615c259092919063ffffffff16565b80519091501561383e57808060200190516020811015615be857600080fd5b505161383e5760405162461bcd60e51b815260040180806020018281038252602a815260200180615ebe602a913960400191505060405180910390fd5b6060611b0b848460008585615c3985615d40565b615c8a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310615cc95780518252601f199092019160209182019101615caa565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114615d2b576040519150601f19603f3d011682016040523d82523d6000602084013e615d30565b606091505b50915091506124e6828286615d46565b3b151590565b60608315615d55575081611dbf565b825115615d655782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156158cf5781810151838201526020016158b7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615ded5782800160ff19823516178555615e1a565b82800160010185558215615e1a579182015b82811115615e1a578235825591602001919060010190615dff565b50615e26929150615e67565b5090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b5b80821115615e265760008155600101615e6856fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a164736f6c634300060c000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106105995760003560e01c80638585f4d2116102e9578063c7e074c31161018f578063c7e074c314611225578063cea0c32814611265578063cfad57a21461129b578063d2fa635e146112c1578063d3127e63146112de578063d54d5a9f146112fb578063d66b000d1461135a578063d8f897c314611386578063d9ac4225146113ac578063da76524c146113b4578063daf9c210146113fe578063db3555fb14611424578063db97495f1461144a578063dc8f5fac14611496578063de2ea9481461149e578063df73a267146114e6578063e124e6d2146114ee578063e468baf014611514578063e67f59a714611531578063efa10a6e14611557578063f07456ce14611583578063f07bbf77146115a9578063f2555278146115c8578063f3ae2415146115f6578063f5b91b7b1461161c578063f887ea4014611624578063fa12dbc01461162c578063fbfded6d1461165e578063fce28c101461168c578063fdaf6ac314611694578063fed1a606146116d857610599565b80638585f4d214610e90578063870d917c14610ebc57806388b1fbdf14610ec45780638a27d46814610eea5780638a39735a1461061a5780638a78daa814610f135780638ee573ac14610f395780638f7b840414610f5f5780639060b1ca14610f855780639331621214610f8d57806395082d2514610fc55780639698d25a14610fcd5780639849e41214610ff35780639899cd0214610ffb5780639d7432ca146110275780639f392eb314611059578063a22f239214611061578063a42ab3d214611069578063a5e90eee14611095578063a93acac2146110c3578063ab08c1c6146110e9578063ab2f3ad4146110f1578063ad1e4f8d14611117578063ae3302c21461113d578063b06423f314611145578063b136ca491461114d578063b1cc53ab14611173578063b364accb146111ab578063c3c7b9e9146111d1578063c4f718bf146111f7578063c65bc7b1146111ff57610599565b80634453a3741161044e5780634453a3741461097057806345a6f3701461099e57806348d91abf146109f757806348f35cbb14610a3b5780634a3f088d14610a435780634a993ee914610ac45780634befe2ca14610aea5780634d47b30414610af2578063514ea4bf14610afa57806351723e8214610b4f578063523fba7f14610b8d578063529a356f14610bb357806352f55eed14610bd95780635c07eaab14610bff5780635f7bc11914610c3f5780636092219914610c6557806362287a3214610c935780636274980314610c9b5780636abbe0c814610cc15780636ae0b15414610cc95780636be6026b14610cef57806371089f4d14610cf7578063711e619014610d1d578063724e78da14610d4b578063728cdbca14610d71578063741bef1a14610db95780637a210a2b14610dc15780637c2eb9f714610dc9578063817bb85714610de857806381a612d614610e1657806382a0849014610e3c57610599565b806304fef1db1461059e57806307c58752146105d65780630842b076146105de5780630a48d5a9146105e657806310eb56c214610612578063126082cf1461061a57806312d43a5114610622578063134ca63b14610646578063174d26941461064e578063181e210e146106565780631aa4ace5146106725780631ce9cb8f1461069857806324b0c04d146106be57806324ca984e146106df57806328e67be51461070557806329ff96151461077a5780632c668ec1146107a05780632d4b0576146107cc57806330455ede1461080a578063318bc6891461082957806334c1557d1461061a578063351a964d14610831578063392e53cd146108395780633a05dcc1146108415780633c5a6e35146108675780633de39c11146108b55780633e72a262146108bd57806340eb3802146108c5578063421528731461091657806342b60b031461094a575b600080fd5b6105c4600480360360208110156105b457600080fd5b50356001600160a01b031661176a565b60408051918252519081900360200190f35b6105c46117cd565b6105c46117de565b6105c4600480360360408110156105fc57600080fd5b506001600160a01b0381351690602001356117e4565b6105c4611837565b6105c461183d565b61062a611843565b604080516001600160a01b039092168252519081900360200190f35b6105c4611852565b6105c4611858565b61065e61185e565b604080519115158252519081900360200190f35b6105c46004803603602081101561068857600080fd5b50356001600160a01b031661186e565b6105c4600480360360208110156106ae57600080fd5b50356001600160a01b0316611880565b6106dd600480360360208110156106d457600080fd5b50351515611892565b005b6106dd600480360360208110156106f557600080fd5b50356001600160a01b03166118b6565b6106dd6004803603604081101561071b57600080fd5b81359190810190604081016020820135600160201b81111561073c57600080fd5b82018360208201111561074e57600080fd5b803590602001918460018302840111600160201b8311171561076f57600080fd5b5090925090506118e7565b6105c46004803603602081101561079057600080fd5b50356001600160a01b0316611965565b6105c4600480360360408110156107b657600080fd5b506001600160a01b038135169060200135611979565b6105c4600480360360808110156107e257600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013515156119be565b6106dd6004803603602081101561082057600080fd5b50351515611a14565b6105c4611a36565b61065e611a3c565b61065e611a4a565b6105c46004803603602081101561085757600080fd5b50356001600160a01b0316611a53565b6106dd600480360360e081101561087d57600080fd5b506001600160a01b038135169060208101359060408101359060608101359060808101359060a081013515159060c001351515611b13565b6105c4611c55565b61065e611c5b565b6106dd60048036036101208110156108dc57600080fd5b5080359060208101359060408101359060608101359060808101359060a08101359060c08101359060e08101359061010001351515611c6a565b6105c46004803603606081101561092c57600080fd5b508035906001600160a01b0360208201358116916040013516611d24565b61065e6004803603602081101561096057600080fd5b50356001600160a01b0316611dc6565b6106dd6004803603604081101561098657600080fd5b506001600160a01b0381351690602001351515611ddb565b6109dc600480360360808110156109b457600080fd5b506001600160a01b038135811691602081013582169160408201351690606001351515611e0e565b60408051921515835260208301919091528051918290030190f35b6106dd600480360360a0811015610a0d57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013590608001351515611eac565b61062a6122eb565b610a8160048036036080811015610a5957600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013515156122fa565b604080519889526020890197909752878701959095526060870193909352608086019190915260a0850152151560c084015260e083015251908190036101000190f35b6105c460048036036020811015610ada57600080fd5b50356001600160a01b03166123f0565b6105c4612402565b6105c4612408565b610b1760048036036020811015610b1057600080fd5b503561240e565b604080519788526020880196909652868601949094526060860192909252608085015260a084015260c0830152519081900360e00190f35b6105c460048036036080811015610b6557600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135151561244b565b6105c460048036036020811015610ba357600080fd5b50356001600160a01b03166124f1565b61065e60048036036020811015610bc957600080fd5b50356001600160a01b0316612503565b6105c460048036036020811015610bef57600080fd5b50356001600160a01b0316612518565b6109dc600480360360a0811015610c1557600080fd5b506001600160a01b038135169060208101359060408101359060608101351515906080013561252a565b6106dd60048036036020811015610c5557600080fd5b50356001600160a01b0316612622565b61065e60048036036040811015610c7b57600080fd5b506001600160a01b0381358116916020013516612705565b6105c4612725565b6105c460048036036020811015610cb157600080fd5b50356001600160a01b031661272b565b61062a61273d565b6106dd60048036036020811015610cdf57600080fd5b50356001600160a01b0316612753565b6105c4612781565b6106dd60048036036020811015610d0d57600080fd5b50356001600160a01b0316612788565b6105c460048036036040811015610d3357600080fd5b506001600160a01b03813581169160200135166127bc565b6106dd60048036036020811015610d6157600080fd5b50356001600160a01b0316612a50565b6106dd600480360360c0811015610d8757600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060a00135612a7a565b61062a612af1565b6105c4612b00565b6106dd60048036036020811015610ddf57600080fd5b50351515612b06565b6105c460048036036040811015610dfe57600080fd5b506001600160a01b0381358116916020013516612b2a565b6105c460048036036020811015610e2c57600080fd5b50356001600160a01b0316612dfa565b6105c4600480360360e0811015610e5257600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a081013515159160c09091013516612ea5565b6106dd60048036036040811015610ea657600080fd5b506001600160a01b038135169060200135612f23565b6105c4612f47565b6105c460048036036020811015610eda57600080fd5b50356001600160a01b0316612f4c565b6106dd60048036036060811015610f0057600080fd5b5080359060208101359060400135612f5e565b6105c460048036036020811015610f2957600080fd5b50356001600160a01b0316612fa4565b6105c460048036036020811015610f4f57600080fd5b50356001600160a01b0316612fb6565b6106dd60048036036020811015610f7557600080fd5b50356001600160a01b0316612fc8565b61065e612ff2565b6105c460048036036060811015610fa357600080fd5b506001600160a01b038135811691602081013582169160409091013516613001565b6105c46132e9565b6105c460048036036020811015610fe357600080fd5b50356001600160a01b03166132f9565b6105c461330b565b6105c46004803603604081101561101157600080fd5b506001600160a01b038135169060200135613311565b6105c46004803603606081101561103d57600080fd5b506001600160a01b038135169060208101359060400135613333565b61065e6133dc565b6105c46133e5565b6105c46004803603604081101561107f57600080fd5b506001600160a01b0381351690602001356133eb565b6106dd600480360360408110156110ab57600080fd5b506001600160a01b0381351690602001351515613408565b6105c4600480360360208110156110d957600080fd5b50356001600160a01b031661343b565b61065e613539565b6105c46004803603602081101561110757600080fd5b50356001600160a01b0316613542565b6105c46004803603602081101561112d57600080fd5b50356001600160a01b0316613554565b6105c4613566565b61065e61356c565b6105c46004803603602081101561116357600080fd5b50356001600160a01b031661357a565b6105c46004803603606081101561118957600080fd5b506001600160a01b03813581169160208101359091169060400135151561361b565b6109dc600480360360208110156111c157600080fd5b50356001600160a01b03166136b6565b6105c4600480360360208110156111e757600080fd5b50356001600160a01b031661374e565b6105c4613760565b6105c46004803603602081101561121557600080fd5b50356001600160a01b0316613766565b6105c4600480360360a081101561123b57600080fd5b506001600160a01b0381351690602081013590604081013590606081013590608001351515613778565b6106dd6004803603606081101561127b57600080fd5b506001600160a01b03813581169160208101359091169060400135613822565b6106dd600480360360208110156112b157600080fd5b50356001600160a01b0316613843565b6106dd600480360360208110156112d757600080fd5b503561386d565b6106dd600480360360208110156112f457600080fd5b503561387a565b611341600480360360a081101561131157600080fd5b506001600160a01b0381358116916020810135821691604082013516906060810135151590608001351515613896565b6040805192835260208301919091528051918290030190f35b6106dd6004803603604081101561137057600080fd5b506001600160a01b03813516906020013561394d565b6105c46004803603602081101561139c57600080fd5b50356001600160a01b03166139a6565b6105c46139b8565b6105c4600480360360c08110156113ca57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013515159060808101359060a001356139be565b61065e6004803603602081101561141457600080fd5b50356001600160a01b0316613a72565b61065e6004803603602081101561143a57600080fd5b50356001600160a01b0316613a87565b6105c4600480360360e081101561146057600080fd5b506001600160a01b0381351690602081013590604081013590606081013515159060808101359060a08101359060c00135613a9b565b6105c4613b2c565b6106dd600480360360a08110156114b457600080fd5b506001600160a01b03813581169160208101358216916040820135811691606081013515159160809091013516613b32565b6105c4613f0a565b6105c46004803603602081101561150457600080fd5b50356001600160a01b0316613f10565b61062a6004803603602081101561152a57600080fd5b5035613f88565b6106dd6004803603602081101561154757600080fd5b50356001600160a01b0316613faf565b6106dd6004803603604081101561156d57600080fd5b506001600160a01b038135169060200135614082565b6105c46004803603602081101561159957600080fd5b50356001600160a01b03166140a6565b6106dd600480360360208110156115bf57600080fd5b503515156140b8565b6105c4600480360360408110156115de57600080fd5b506001600160a01b03813581169160200135166140de565b61065e6004803603602081101561160c57600080fd5b50356001600160a01b0316614134565b61062a614149565b61062a614158565b6105c46004803603606081101561164257600080fd5b506001600160a01b038135169060208101359060400135614167565b6106dd6004803603604081101561167457600080fd5b506001600160a01b03813581169160200135166141a1565b6105c461437a565b6105c4600480360360a08110156116aa57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013515159060800135614380565b6116f5600480360360208110156116ee57600080fd5b50356143f6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561172f578181015183820152602001611717565b50505050905090810190601f16801561175c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6001600160a01b038116600090815260256020526040812054806117925760009150506117c8565b6001600160a01b0383166000908152602660205260409020546117c49082906117be90620f4240614491565b906144ea565b9150505b919050565b6904ee2d6d415b85acef8160201b81565b601b5490565b6000816117f357506000611831565b60006117fe84612dfa565b6001600160a01b0385166000908152601d602052604090205490915061182c600a82900a6117be8685614491565b925050505b92915050565b600b5481565b61271081565b6006546001600160a01b031681565b60145481565b60095481565b6016546301000000900460ff1681565b60236020526000908152604090205481565b602c6020526000908152604090205481565b61189a614529565b60168054911515620100000262ff000019909216919091179055565b3360009081526018602090815260408083206001600160a01b0394909416835292905220805460ff19166001179055565b6002546001600160a01b03163314611946576040805162461bcd60e51b815260206004820152601e60248201527f5661756c743a20696e76616c6964206572726f72436f6e74726f6c6c65720000604482015290519081900360640190fd5b600083815260306020526040902061195f908383615dac565b50505050565b6000611831826119748461357a565b6117e4565b60008061198584613f10565b905060006119a3826117be8668327cb2734119d3b7a9601e1b614491565b60055490915061182c9082906001600160a01b031687611d24565b604080516001600160601b0319606096871b811660208084019190915295871b811660348301529390951b9092166048850152151560f81b605c8401528051603d818503018152605d9093019052815191012090565b611a1c614529565b600180549115156101000261ff0019909216919091179055565b600f5481565b600154610100900460ff1681565b60015460ff1681565b600080600560009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611aa457600080fd5b505afa158015611ab8573d6000803e3d6000fd5b505050506040513d6020811015611ace57600080fd5b5051905080611ae15760009150506117c8565b6001600160a01b038316600090815260226020526040902054601554611b0b906117be8385614491565b949350505050565b611b1b614529565b6001600160a01b0387166000908152601c602052604090205460ff16611b9857600754611b49906001614544565b600755601b80546001810182556000919091527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b0319166001600160a01b0389161790555b6015546001600160a01b038816600090815260226020526040902054611bbf90829061459c565b6001600160a01b0389166000908152601c602090815260408083208054600160ff1991821617909155601d83528184208c9055602283528184208b9055601e83528184208a905560248352818420899055601f83528184208054821689151517905591805290912080549091168415151790559050611c3e8187614544565b601555611c4a88613f10565b505050505050505050565b60175481565b60015462010000900460ff1681565b611c72614529565b611c826101f48a111560036145de565b611c926101f489111560046145de565b611ca26101f488111560056145de565b611cb26101f487111560066145de565b611cc26101f486111560076145de565b611cd26101f485111560086145de565b611ced6904ee2d6d415b85acef8160201b84111560096145de565b600a98909855600b96909655600c94909455600d92909255600e55600f556009556010556011805460ff1916911515919091179055565b60055460009081906001600160a01b03858116911614611d5c576001600160a01b0384166000908152601d6020526040902054611d5f565b60125b6005549091506000906001600160a01b03858116911614611d98576001600160a01b0384166000908152601d6020526040902054611d9b565b60125b9050611dba82600a0a6117be83600a0a8961449190919063ffffffff16565b925050505b9392505050565b601f6020526000908152604090205460ff1681565b611de3614529565b6001600160a01b03919091166000908152601960205260409020805460ff1916911515919091179055565b6000806000611e1f878787876119be565b9050611e29615e2a565b506000818152602b6020908152604091829020825160e081018452815480825260018301549382019390935260028201549381018490526003820154606082015260048201546080820152600582015460a082015260069091015460c082018190529092611e9d928992909190899061252a565b93509350505094509492505050565b60026000541415611ef2576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b6002600055600154611f0e9062010000900460ff16601c6145de565b611f1661468a565b611f1f856146a6565b611f2a848483614709565b60015460408051634eae147d60e11b81526001600160a01b038881166004830152878116602483015286811660448301526064820186905284151560848301529151630100000090930490911691639d5c28fa9160a480820192600092909190829003018186803b158015611f9e57600080fd5b505afa158015611fb2573d6000803e3d6000fd5b50505050611fc084846141a1565b6000611fce868686856119be565b6000818152602b6020526040812091925083611ff257611fed86612dfa565b611ffb565b611ffb86613f10565b825490915061200c57600282018190555b81541580159061201c5750600085115b156120425761203c868360000154846002015487858a8860060154613a9b565b60028301555b600061205b898989888a8860000154896003015461481e565b90506000612068896148ec565b905060006120768a836117e4565b60018601549091506120889082614544565b6001860181905561209d90841115601d6145de565b60018501546120ac908461459c565b60018601556120bc8a8a8961361b565b600386015584546120cd9089614544565b8086554260068701556120e3901515601e6145de565b6120f585600001548660010154614999565b6121038b8b8b8a6001613896565b505060006121118b8a6133eb565b60048701549091506121239082614544565b60048701556121328b826149bd565b87156121775761214b8b6121468b87614544565b614a5d565b6121558b83614adc565b61215f8b84614b5b565b6121728b61216d8d87613311565b614c73565b6121e3565b6001600160a01b038a166000908152602d60205260409020546121b4576001600160a01b038a166000908152602e602052604090208590556121d9565b6121bf8a868b613333565b6001600160a01b038b166000908152602e60205260409020555b6121e38a8a614d46565b604080518881526001600160a01b03808f166020830152808e16828401528c1660608201526080810184905260a081018b905289151560c082015260e08101879052610100810186905290517f2fe68525253654c21998f35787a8d0f361905ef647c854092430ab65f2f15022918190036101200190a1855460018701546002880154600389015460048a015460058b0154604080518e81526020810197909752868101959095526060860193909352608085019190915260a084015260c083015260e08201879052517f20853733b590dce729d9f4628682ebd9a34d2354e72679e66f43a008fc03b773918190036101000190a15050600160005550505050505050505050565b6002546001600160a01b031681565b60008060008060008060008060006123148d8d8d8d6119be565b905061231e615e2a565b602b60008381526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000808260a001511361239e578160a001516000036123a4565b8160a001515b9050816000015182602001518360400151846060015185608001518560008860a0015112158860c001519a509a509a509a509a509a509a509a5050505094995094995094999196509450565b60276020526000908152604090205481565b6101f481565b600c5481565b602b602052600090815260409020805460018201546002830154600384015460048501546005860154600690960154949593949293919290919087565b60008061245a868686866119be565b9050612464615e2a565b506000818152602b6020908152604091829020825160e0810184528154815260018201549281018390526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c08301526124ce90151560256145de565b602081015181516124e691906117be90612710614491565b979650505050505050565b60216020526000908152604090205481565b60196020526000908152604090205460ff1681565b60256020526000908152604090205481565b60008061253b6000861160266145de565b6000846125505761254b88613f10565b612559565b61255988612dfa565b905060008187116125735761256e828861459c565b61257d565b61257d878361459c565b9050600061258f886117be8b85614491565b9050600087156125a257508783116125a7565b508288115b60006125be6010548961454490919063ffffffff16565b42116125e2576001600160a01b038c166000908152601e60205260409020546125e5565b60005b905081801561260857506125f98b82614491565b61260584612710614491565b11155b1561261257600092505b509a909950975050505050505050565b60026000541415612668576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b600260009081556001600160a01b0382168152601c60205260409020546126939060ff16600e6145de565b600061269e826148ec565b90506126ae60008211600f6145de565b6126b88282614b5b565b604080516001600160a01b03841681526020810183905281517fa5a389190ebf6170a133bda5c769b77f4d6715b8aa172ec0ddf8473d0b4944bd929181900390910190a150506001600055565b601860209081526000928352604080842090915290825290205460ff1681565b60075481565b602e6020526000908152604090205481565b600154630100000090046001600160a01b031681565b3360009081526018602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b620f424081565b612790614529565b600180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b600060026000541415612804576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b6002600055612811614dfe565b6001600160a01b0383166000908152601c60205260409020546128389060ff1660136145de565b6016805461ff00191661010017905560055460009061285f906001600160a01b03166148ec565b905061286f6000821160146145de565b61287984856141a1565b60006128858583611979565b90506128956000821160156145de565b61289f8583614e2d565b6128a98582614c73565b60055460408051632770a7eb60e21b81523060048201526024810185905290516001600160a01b0390921691639dc29fac9160448082019260009290919082900301818387803b1580156128fc57600080fd5b505af1158015612910573d6000803e3d6000fd5b505060055461292a92506001600160a01b03169050614f0f565b6001546040805163eb0835bf60e01b81526001600160a01b038881166004830152602482018690529151600093630100000090049092169163eb0835bf91604480820192602092909190829003018186803b15801561298857600080fd5b505afa15801561299c573d6000803e3d6000fd5b505050506040513d60208110156129b257600080fd5b5051905060006129c3878484614faa565b90506129d36000821160166145de565b6129de878288615072565b604080516001600160a01b03808916825289166020820152808201869052606081018390526080810184905290517fd732b7828fa6cee72c285eac756fc66a7477e3dc22e22e7c432f1c265d40b4839181900360a00190a16016805461ff001916905560016000559695505050505050565b612a58614529565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b612a82614529565b60018054612a969160ff90911615906145de565b6001805460ff191681179055600380546001600160a01b03199081166001600160a01b039889161790915560058054821696881696909617909555600480549095169390951692909217909255600991909155601355601455565b6004546001600160a01b031681565b600a5481565b612b0e614529565b60018054911515620100000262ff000019909216919091179055565b600060026000541415612b72576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b6002600055612b7f614dfe565b6001600160a01b0383166000908152601c6020526040902054612ba69060ff1660106145de565b6016805461ff0019166101001790556000612bc0846148ec565b9050612bd06000821160116145de565b612bda84856141a1565b6000612be585612dfa565b90506000612c0368327cb2734119d3b7a9601e1b6117be8585614491565b600554909150612c1f90829088906001600160a01b0316611d24565b9050612c2f6000821160126145de565b6001546040805163256f6ee360e11b81526001600160a01b0389811660048301526024820185905291516000936301000000900490921691634adeddc691604480820192602092909190829003018186803b158015612c8d57600080fd5b505afa158015612ca1573d6000803e3d6000fd5b505050506040513d6020811015612cb757600080fd5b505190506000612cc8888684614faa565b90506000612ce668327cb2734119d3b7a9601e1b6117be8488614491565b600554909150612d029082908b906001600160a01b0316611d24565b9050612d0e8982615119565b612d188983614b5b565b600554604080516340c10f1960e01b81526001600160a01b038b8116600483015260248201859052915191909216916340c10f1991604480830192600092919082900301818387803b158015612d6d57600080fd5b505af1158015612d81573d6000803e3d6000fd5b5050604080516001600160a01b03808d1682528d1660208201528082018a9052606081018590526080810187905290517fab4c77c74cd32c85f35416cf03e7ce9e2d4387f7b7f2c1f4bf53daaecf8ea72d93509081900360a0019150a16016805461ff0019169055600160005598975050505050505050565b60048054601654604080516317e1d38560e11b81526001600160a01b038681169582019590955260006024820181905260ff80851615156044840152610100909404909316151560648201529051919390921691632fc3a70a916084808301926020929190829003018186803b158015612e7357600080fd5b505afa158015612e87573d6000803e3d6000fd5b505050506040513d6020811015612e9d57600080fd5b505192915050565b600060026000541415612eed576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b6002600055612efa61468a565b612f03886146a6565b612f12888888888888886151d7565b600160005598975050505050505050565b612f2b614529565b6001600160a01b03909116600090815260276020526040902055565b601281565b601e6020526000908152604090205481565b612f66614529565b612f76610e10841015600a6145de565b612f86612710831115600b6145de565b612f96612710821115600c6145de565b601292909255601355601455565b602d6020526000908152604090205481565b601d6020526000908152604090205481565b612fd0614529565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60165462010000900460ff1681565b600060026000541415613049576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b600260005560015461306490610100900460ff1660176145de565b6001600160a01b0384166000908152601c602052604090205461308b9060ff1660186145de565b6001600160a01b0383166000908152601c60205260409020546130b29060ff1660196145de565b6130d2836001600160a01b0316856001600160a01b03161415601a6145de565b6016805461ff0019166101001790556130eb84806141a1565b6130f583846141a1565b6000613100856148ec565b905061311060008211601b6145de565b600061311b86612dfa565b9050600061312886613f10565b9050600061313a826117be8686614491565b9050613147818989611d24565b9050600061316568327cb2734119d3b7a9601e1b6117be8787614491565b6005549091506131819082908b906001600160a01b0316611d24565b60015460408051636d099c0b60e11b81526001600160a01b038d811660048301528c8116602483015260448201859052915193945060009363010000009093049091169163da13381691606480820192602092909190829003018186803b1580156131eb57600080fd5b505afa1580156131ff573d6000803e3d6000fd5b505050506040513d602081101561321557600080fd5b5051905060006132268a8584614faa565b90506132328b84615119565b61323c8a84614e2d565b6132468b88614b5b565b6132508a85614c73565b6132598a61569a565b6132648a828b615072565b604080516001600160a01b03808c168252808e1660208301528c1681830152606081018990526080810186905260a0810183905260c0810184905290517f0874b2d545cb271cdbda4e093020c452328b24af12382ed62c4d00f5c26709db9181900360e00190a16016805461ff001916905560016000559a9950505050505050505050565b68327cb2734119d3b7a9601e1b81565b602f6020526000908152604090205481565b60125481565b60008161332057506000611831565b611dbf838361332e86613f10565b614167565b6001600160a01b0383166000908152602d6020908152604080832054602e9092528220548285821161336e57613369868361459c565b613378565b613378828761459c565b9050600061338a836117be8685614491565b9050868311600061339b8689614544565b90506000826133b3576133ae8285614544565b6133bd565b6133bd828561459c565b90506133cd816117be8c85614491565b9b9a5050505050505050505050565b60115460ff1681565b600d5481565b6000816133fa57506000611831565b611dbf838361332e86612dfa565b613410614529565b6001600160a01b03919091166000908152601a60205260409020805460ff1916911515919091179055565b6012546001600160a01b0382166000908152602a60205260408120549091429161346491614544565b1115613472575060006117c8565b6012546001600160a01b0383166000908152602a6020526040812054909161349f916117be90429061459c565b6001600160a01b038416600090815260256020526040902054909150806134cb576000925050506117c8565b6001600160a01b0384166000908152601f602052604081205460ff166134f3576013546134f7565b6014545b6001600160a01b0386166000908152602660205260409020549091506135309083906117be90869061352a908690614491565b90614491565b95945050505050565b60165460ff1681565b60226020526000908152604090205481565b60246020526000908152604090205481565b60085481565b601654610100900460ff1681565b6001600160a01b0381166000908152601f602052604081205460ff16156135ba57506001600160a01b0381166000908152602560205260409020546117c8565b6001600160a01b0382166000908152602860205260408120546135de908490613311565b6001600160a01b0384166000908152602660209081526040808320546025909252909120549192506117c491613615908490614544565b9061459c565b6001546040805163b1cc53ab60e01b81526001600160a01b038681166004830152858116602483015284151560448301529151600093630100000090049092169163b1cc53ab91606480820192602092909190829003018186803b15801561368257600080fd5b505afa158015613696573d6000803e3d6000fd5b505050506040513d60208110156136ac57600080fd5b5051949350505050565b6001600160a01b0381166000908152602d60205260408120548190806136e3576000809250925050613749565b60006136ee85613f10565b6001600160a01b0386166000908152602e60205260408120549192508282116137205761371b838361459c565b61372a565b61372a828461459c565b9050600061373c836117be8785614491565b9390921195509193505050505b915091565b60266020526000908152604090205481565b60135481565b60296020526000908152604090205481565b6001546040805163c7e074c360e01b81526001600160a01b03888116600483015260248201889052604482018790526064820186905284151560848301529151600093630100000090049092169163c7e074c39160a480820192602092909190829003018186803b1580156137ec57600080fd5b505afa158015613800573d6000803e3d6000fd5b505050506040513d602081101561381657600080fd5b50519695505050505050565b61382a614529565b61383e6001600160a01b038316848361570f565b505050565b61384b614529565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b613875614529565b601755565b613882614529565b613891612710821160026145de565b600855565b6001546040805163d54d5a9f60e01b81526001600160a01b03888116600483015287811660248301528681166044830152851515606483015284151560848301528251600094859463010000009091049092169263d54d5a9f9260a4808301939192829003018186803b15801561390c57600080fd5b505afa158015613920573d6000803e3d6000fd5b505050506040513d604081101561393657600080fd5b508051602090910151909890975095505050505050565b613955614529565b6001600160a01b0382166000908152602360205260409020548082111561398f5761398983613984848461459c565b615119565b506139a2565b61383e8361399d838561459c565b614e2d565b5050565b602a6020526000908152604090205481565b60105481565b6001546040805163369d949360e21b81526001600160a01b0389811660048301528881166024830152878116604483015286151560648301526084820186905260a482018590529151600093630100000090049092169163da76524c9160c480820192602092909190829003018186803b158015613a3b57600080fd5b505afa158015613a4f573d6000803e3d6000fd5b505050506040513d6020811015613a6557600080fd5b5051979650505050505050565b601c6020526000908152604090205460ff1681565b602080526000908152604090205460ff1681565b6000806000613aad8a8a8a8a8861252a565b90925090506000613abe8a87614544565b905060008815613aed5783613adc57613ad7828461459c565b613ae6565b613ae68284614544565b9050613b0e565b83613b0157613afc8284614544565b613b0b565b613b0b828461459c565b90505b613b1c816117be8a85614491565b9c9b505050505050505050505050565b60155481565b60026000541415613b78576040805162461bcd60e51b815260206004820152601f6024820152600080516020615e7d833981519152604482015290519081900360640190fd5b60026000556016546301000000900460ff1615613bad5733600090815260196020526040902054613bad9060ff1660226145de565b6016805460ff19169055613bc184846141a1565b6000613bcf868686866119be565b9050613bd9615e2a565b506000818152602b6020908152604091829020825160e08101845281548082526001830154938201939093526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c0830152613c4590151560236145de565b600080613c56898989896000613896565b91509150613c69826000141560246145de565b8160021415613c9e57613c86898989600087600001518b8f6151d7565b50506016805460ff1916600117905550613efe915050565b6000613caa8983613311565b6001600160a01b038a166000908152602c6020526040902054909150613cd09082614544565b6001600160a01b038a166000818152602c602090815260409182902093909355805191825291810184905280820183905290517f5d0c0019d3d45fadeb74eff9d2c9924d146d000ac6bcf3c28bf0ac3c9baa011a9181900360600190a1613d3b898560800151615761565b8615613d6a5760208401518451613d5c918b91613d579161459c565b614adc565b613d6a8961216d8b85613311565b600087613d7f57613d7a89613f10565b613d88565b613d8889612dfa565b90507f2e1f85a64a2f22cf2f0c42584e7c919ed4abe8d53675cff0f62bf1e95a1c676f868c8c8c8c8a600001518b602001518c608001518d60a001518a604051808b81526020018a6001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b0316815260200187151581526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a187158015613e475750846020015183105b15613e75576020850151600090613e5e908561459c565b9050613e738b613e6e8d84613311565b614b5b565b505b87613e8857613e88898660000151615816565b6000868152602b60205260408120818155600181018290556002810182905560038101829055600481018290556005810182905560060155600954613ed4908b9061216d908290613311565b613eea8a613ee48c600954613311565b89615072565b50506016805460ff19166001179055505050505b50506001600055505050565b600e5481565b60048054601654604080516317e1d38560e11b81526001600160a01b03868116958201959095526001602482015260ff80841615156044830152610100909304909216151560648301525160009390921691632fc3a70a91608480820192602092909190829003018186803b158015612e7357600080fd5b601b8181548110613f9557fe5b6000918252602090912001546001600160a01b0316905081565b613fb7614529565b6001600160a01b0381166000908152601c6020526040902054613fde9060ff16600d6145de565b6001600160a01b0381166000908152602260205260409020546015546140039161459c565b6015556001600160a01b0381166000908152601c60209081526040808320805460ff19908116909155601d835281842084905560228352818420849055601e835281842084905560248352818420849055601f83528184208054821690559180529091208054909116905560075461407c90600161459c565b60075550565b61408a614529565b6001600160a01b039091166000908152602f6020526040902055565b60286020526000908152604090205481565b6140c0614529565b6016805491151563010000000263ff00000019909216919091179055565b60006140e8614529565b6001600160a01b0383166000908152602c602052604090205480614110576000915050611831565b6001600160a01b0384166000908152602c6020526040812055611dbf848285615072565b601a6020526000908152604090205460ff1681565b6005546001600160a01b031681565b6003546001600160a01b031681565b60008261417657506000611dbf565b6001600160a01b0384166000908152601d6020526040902054613530836117be86600a85900a614491565b6001546040805163fbfded6d60e01b81526001600160a01b03858116600483015284811660248301529151600093630100000090049092169163fbfded6d9160448082019260209290919082900301818787803b15801561420157600080fd5b505af1158015614215573d6000803e3d6000fd5b505050506040513d602081101561422b57600080fd5b505190508061423a57506139a2565b6001600160a01b0383166000908152602a6020526040902054614287576012546142689061352a42826144ea565b6001600160a01b0384166000908152602a6020526040902055506139a2565b6012546001600160a01b0384166000908152602a602052604090205442916142af9190614544565b11156142bb57506139a2565b60006142c68461343b565b6001600160a01b0385166000908152602960205260409020549091506142ec9082614544565b6001600160a01b0385166000908152602960205260409020556012546143169061352a42826144ea565b6001600160a01b0385166000818152602a602090815260408083209490945560298152908390205483519283529082015281517fa146fc154e1913322e9817d49f0d5c37466c24326e15de10e739a948be815eab929181900390910190a150505050565b610e1081565b6001546040805163fdaf6ac360e01b81526001600160a01b038881166004830152878116602483015286811660448301528515156064830152608482018590529151600093630100000090049092169163fdaf6ac39160a480820192602092909190829003018186803b1580156137ec57600080fd5b60306020908152600091825260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156144895780601f1061445e57610100808354040283529160200191614489565b820191906000526020600020905b81548152906001019060200180831161446c57829003601f168201915b505050505081565b6000826144a057506000611831565b828202828482816144ad57fe5b0414611dbf5760405162461bcd60e51b8152600401808060200182810382526021815260200180615e9d6021913960400191505060405180910390fd5b6000611dbf83836040518060400160405280601a815260200179536166654d6174683a206469766973696f6e206279207a65726f60301b81525061587e565b600654614542906001600160a01b0316331460356145de565b565b600082820183811015611dbf576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b6000611dbf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250615920565b60008181526030602052604090208261383e5760405162461bcd60e51b815260206004820190815282546002600019610100600184161502019091160460248301819052909182916044909101908490801561467b5780601f106146505761010080835404028352916020019161467b565b820191906000526020600020905b81548152906001019060200180831161465e57829003601f168201915b50509250505060405180910390fd5b60175461469657614542565b6145426017543a111560376145de565b336001600160a01b03821614156146bc57614706565b6003546001600160a01b03163314156146d457614706565b6001600160a01b03811660009081526018602090815260408083203384529091529020546147069060ff1660296145de565b50565b80156147825761472e826001600160a01b0316846001600160a01b031614602a6145de565b6001600160a01b0383166000908152601c60205260409020546147559060ff16602b6145de565b6001600160a01b0383166000908152601f602052604090205461477d9060ff1615602c6145de565b61383e565b6001600160a01b0383166000908152601c60205260409020546147a99060ff16602d6145de565b6001600160a01b0383166000908152601f60205260409020546147d09060ff16602e6145de565b6001600160a01b0382166000908152601f60205260409020546147f89060ff1615602f6145de565b6001600160a01b038216600090815260208052604090205461383e9060ff1660306145de565b60008061482e8989898989614380565b905060006148408a8a8a8a89896139be565b905061484c8282614544565b9150600061485a8a84613311565b6001600160a01b038b166000908152602c60205260409020549091506148809082614544565b6001600160a01b038b166000818152602c602090815260409182902093909355805191825291810185905280820183905290517f5d0c0019d3d45fadeb74eff9d2c9924d146d000ac6bcf3c28bf0ac3c9baa011a9181900360600190a150909998505050505050505050565b6001600160a01b03811660008181526021602090815260408083205481516370a0823160e01b8152306004820152915193949093859391926370a08231926024808301939192829003018186803b15801561494657600080fd5b505afa15801561495a573d6000803e3d6000fd5b505050506040513d602081101561497057600080fd5b50516001600160a01b03851660009081526021602052604090208190559050611b0b818361459c565b816149af576149aa811560276145de565b6139a2565b6139a28183101560286145de565b6001600160a01b0382166000908152602660205260409020546149e09082614544565b6001600160a01b038316600090815260266020818152604080842085905560258252909220549152614a1591111560346145de565b604080516001600160a01b03841681526020810183905281517faa5649d82f5462be9d19b0f2b31a59b2259950a6076550bac9f3a1c07db9f66d929181900390910190a15050565b6001600160a01b038216600090815260286020526040902054614a809082614544565b6001600160a01b03831660008181526028602090815260409182902093909355805191825291810183905281517fd9d4761f75e0d0103b5cbeab941eeb443d7a56a35b5baf2a0787c03f03f4e474929181900390910190a15050565b6001600160a01b038216600090815260286020526040902054614aff908261459c565b6001600160a01b03831660008181526028602090815260409182902093909355805191825291810183905281517f34e07158b9db50df5613e591c44ea2ebc82834eff4a4dc3a46e000e608261d68929181900390910190a15050565b6001600160a01b038216600090815260256020526040902054614b7e9082614544565b6001600160a01b03831660008181526025602090815260408083209490945583516370a0823160e01b8152306004820152935191936370a082319260248083019392829003018186803b158015614bd457600080fd5b505afa158015614be8573d6000803e3d6000fd5b505050506040513d6020811015614bfe57600080fd5b50516001600160a01b038416600090815260256020526040902054909150614c2a9082101560316145de565b604080516001600160a01b03851681526020810184905281517f976177fbe09a15e5e43f848844963a42b41ef919ef17ff21a17a5421de8f4737929181900390910190a1505050565b604080518082018252601a81527915985d5b1d0e881c1bdbdb105b5bdd5b9d08195e18d95959195960321b6020808301919091526001600160a01b038516600090815260259091529190912054614ccb918390615920565b6001600160a01b03831660009081526025602090815260408083208490556026909152902054614cfe91101560326145de565b604080516001600160a01b03841681526020810183905281517f112726233fbeaeed0f5b1dba5cb0b2b81883dee49fb35ff99fd98ed9f6d31eb0929181900390910190a15050565b6001600160a01b0382166000908152602d6020526040902054614d699082614544565b6001600160a01b0383166000908152602d6020908152604080832093909355602f90522054801561383e576001600160a01b0383166000908152602d602052604090205481101561383e576040805162461bcd60e51b815260206004820152601a60248201527915985d5b1d0e881b585e081cda1bdc9d1cc8195e18d95959195960321b604482015290519081900360640190fd5b60165462010000900460ff161561454257336000908152601a60205260409020546145429060ff1660366145de565b6001600160a01b038216600090815260236020526040902054818111614ea8576001600160a01b0383166000818152602360209081526040808320929092558151928352820183905280517fe1e812596aac93a06ecc4ca627014d18e30f5c33b825160cc9d5c0ba61e452279281900390910190a1506139a2565b614eb2818361459c565b6001600160a01b03841660008181526023602090815260409182902093909355805191825291810184905281517fe1e812596aac93a06ecc4ca627014d18e30f5c33b825160cc9d5c0ba61e45227929181900390910190a1505050565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015614f5e57600080fd5b505afa158015614f72573d6000803e3d6000fd5b505050506040513d6020811015614f8857600080fd5b50516001600160a01b0390921660009081526021602052604090209190915550565b600080614fc76127106117be614fc0828761459c565b8790614491565b90506000614fd5858361459c565b6001600160a01b0387166000908152602c6020526040902054909150614ffb9082614544565b6001600160a01b0387166000908152602c60205260409020557f47cd9dda0e50ce30bcaaacd0488452b596221c07ac402a581cfae4d3933cac2b8661504081846117e4565b604080516001600160a01b0390931683526020830191909152818101849052519081900360600190a150949350505050565b6150866001600160a01b038416828461570f565b604080516370a0823160e01b815230600482015290516001600160a01b038516916370a08231916024808301926020929190829003018186803b1580156150cc57600080fd5b505afa1580156150e0573d6000803e3d6000fd5b505050506040513d60208110156150f657600080fd5b50516001600160a01b039093166000908152602160205260409020929092555050565b6001600160a01b03821660009081526023602052604090205461513c9082614544565b6001600160a01b038316600090815260236020908152604080832093909355602490522054801561518e576001600160a01b03831660009081526023602052604090205461518e9082101560336145de565b604080516001600160a01b03851681526020810184905281517f64243679a443432e2293343b77d411ff6144370404618f00ca0d2025d9ca9882929181900390910190a1505050565b600154604080516381d11a2360e01b81526001600160a01b038a8116600483015289811660248301528881166044830152606482018890526084820187905285151560a483015284811660c4830152915160009363010000009004909216916381d11a239160e4808201928692909190829003018186803b15801561525b57600080fd5b505afa15801561526f573d6000803e3d6000fd5b5050505061527d87876141a1565b600061528b898989876119be565b6000818152602b602052604090208054919250906152ac901515601f6145de565b6152be868260000154101560206145de565b6152d0878260010154101560216145de565b6001810154815460048301546000916152ed916117be908b614491565b60048401549091506152ff908261459c565b600484015561530e8b82615761565b506000806153208d8d8d8d8d8d61597a565b8554919350915089146154c4576153388c8c8a61361b565b60038501558354615349908a61459c565b808555600185015461535b9190614999565b6153698d8d8d8b6001613896565b505087156153965761538c8c61214686600101548661459c90919063ffffffff16565b6153968c8a614adc565b6000886153ab576153a68c613f10565b6153b4565b6153b48c612dfa565b90507f93d75d64d1f84fc6f430a64fc578bdd4c1e090e90ea2d51773e626d19de56d30868f8f8f8f8f8f886153e98c8c61459c565b60408051998a526001600160a01b0398891660208b015296881689880152949096166060880152608087019290925260a0860152151560c085015260e084019290925261010083019190915251908190036101200190a18454600186015460028701546003880154600489015460058a0154604080518d81526020810197909752868101959095526060860193909352608085019190915260a084015260c083015260e08201839052517f20853733b590dce729d9f4628682ebd9a34d2354e72679e66f43a008fc03b773918190036101000190a150615638565b87156154de576154d48c84614a5d565b6154de8c8a614adc565b6000886154f3576154ee8c613f10565b6154fc565b6154fc8c612dfa565b90507f93d75d64d1f84fc6f430a64fc578bdd4c1e090e90ea2d51773e626d19de56d30868f8f8f8f8f8f886155318c8c61459c565b60408051998a526001600160a01b0398891660208b015296881689880152949096166060880152608087019290925260a0860152151560c085015260e084019290925261010083019190915251908190036101200190a18454600186015460028701546003880154600489015460058a0154604080518d81526020810197909752868101959095526060860193909352608085019190915260a084015260c0830152517f73af1d417d82c240fdb6d319b34ad884487c6bf2845d98980cc52ad9171cb4559181900360e00190a1506000858152602b602052604081208181556001810182905560028101829055600381018290556004810182905560058101829055600601555b87615647576156478b8a615816565b8115615687578715615661576156618c61216d8e85613311565b600061566d8d83613311565b905061567a8d828a615072565b95506124e6945050505050565b5060009c9b505050505050505050505050565b6001600160a01b0381166000908152602760209081526040808320546025909252909120541015614706576040805162461bcd60e51b815260206004820152601a6024820152792b30bab63a1d103837b7b620b6b7bab73a101e10313ab33332b960311b604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261383e908490615b74565b604080518082018252601b81527a5661756c743a20696e73756666696369656e74207265736572766560281b6020808301919091526001600160a01b0385166000908152602690915291909120546157ba918390615920565b6001600160a01b03831660008181526026602090815260409182902093909355805191825291810183905281517f533cb5ed32be6a90284e96b5747a1bfc2d38fdb5768a6b5f67ff7d62144ed67b929181900390910190a15050565b6001600160a01b0382166000908152602d60205260409020548082111561585657506001600160a01b0382166000908152602d60205260408120556139a2565b615860818361459c565b6001600160a01b0384166000908152602d6020526040902055505050565b6000818361590a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156158cf5781810151838201526020016158b7565b50505050905090810190601f1680156158fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161591657fe5b0495945050505050565b600081848411156159725760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156158cf5781810151838201526020016158b7565b505050900390565b600080600061598b898989876119be565b6000818152602b602052604081208054600382015493945090926159b8918d918d918d918b918d9161481e565b90506000806000806159d98d876000015488600201548d8a6006015461252a565b875491955085935091506159f1906117be8d84614491565b925050506000828015615a045750600082115b15615a345750600584018054820190558088615a34576000615a268e84613311565b9050615a328e82614c73565b505b82158015615a425750600082115b15615a86576001850154615a56908361459c565b600186015588615a7a576000615a6c8e84613311565b9050615a788e82614b5b565b505b60058501805483900390555b8a15615aae57615a96818c614544565b6001860154909150615aa8908c61459c565b60018601555b84548a1415615ad1576001850154615ac7908290614544565b6000600187015590505b8084811115615aeb57615ae4828661459c565b9050615b1f565b6001860154615afa908661459c565b60018701558915615b1f576000615b118f87613311565b9050615b1d8f82614c73565b505b60408051888152851515602082015280820185905290517f3ff41bdde87755b687ae83d0221a232b6be51a803330ed9661c1b5d0105e0d8a9181900360600190a1909e909d509b505050505050505050505050565b6060615bc9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316615c259092919063ffffffff16565b80519091501561383e57808060200190516020811015615be857600080fd5b505161383e5760405162461bcd60e51b815260040180806020018281038252602a815260200180615ebe602a913960400191505060405180910390fd5b6060611b0b848460008585615c3985615d40565b615c8a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310615cc95780518252601f199092019160209182019101615caa565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114615d2b576040519150601f19603f3d011682016040523d82523d6000602084013e615d30565b606091505b50915091506124e6828286615d46565b3b151590565b60608315615d55575081611dbf565b825115615d655782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156158cf5781810151838201526020016158b7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615ded5782800160ff19823516178555615e1a565b82800160010185558215615e1a579182015b82811115615e1a578235825591602001919060010190615dff565b50615e26929150615e67565b5090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b5b80821115615e265760008155600101615e6856fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a164736f6c634300060c000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23515,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 10551,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "isInitialized",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 10555,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "isSwapEnabled",
        "offset": 1,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 10559,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "isLeverageEnabled",
        "offset": 2,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 10561,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "vaultUtils",
        "offset": 3,
        "slot": "1",
        "type": "t_contract(IVaultUtils)19738"
      },
      {
        "astId": 10563,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "errorController",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 10566,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "router",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 10569,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 10572,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "usdg",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 10575,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "gov",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 10578,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "whitelistedTokenCount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 10584,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "maxLeverage",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 10587,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "liquidationFeeUsd",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 10591,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "taxBasisPoints",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 10595,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "stableTaxBasisPoints",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 10599,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "mintBurnFeeBasisPoints",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 10603,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "swapFeeBasisPoints",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 10607,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "stableSwapFeeBasisPoints",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 10611,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "marginFeeBasisPoints",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 10614,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "minProfitTime",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 10618,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "hasDynamicFees",
        "offset": 0,
        "slot": "17",
        "type": "t_bool"
      },
      {
        "astId": 10622,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "fundingInterval",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 10625,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "fundingRateFactor",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 10628,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "stableFundingRateFactor",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 10631,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "totalTokenWeights",
        "offset": 0,
        "slot": "21",
        "type": "t_uint256"
      },
      {
        "astId": 10634,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "includeAmmPrice",
        "offset": 0,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 10637,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "useSwapPricing",
        "offset": 1,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 10641,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "inManagerMode",
        "offset": 2,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 10645,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "inPrivateLiquidationMode",
        "offset": 3,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 10648,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "maxGasPrice",
        "offset": 0,
        "slot": "23",
        "type": "t_uint256"
      },
      {
        "astId": 10655,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "approvedRouters",
        "offset": 0,
        "slot": "24",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 10660,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "isLiquidator",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10665,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "isManager",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10669,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "allWhitelistedTokens",
        "offset": 0,
        "slot": "27",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 10674,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "whitelistedTokens",
        "offset": 0,
        "slot": "28",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10679,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "tokenDecimals",
        "offset": 0,
        "slot": "29",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10684,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "minProfitBasisPoints",
        "offset": 0,
        "slot": "30",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10689,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "stableTokens",
        "offset": 0,
        "slot": "31",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10694,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "shortableTokens",
        "offset": 0,
        "slot": "32",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10699,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "tokenBalances",
        "offset": 0,
        "slot": "33",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10704,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "tokenWeights",
        "offset": 0,
        "slot": "34",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10709,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "usdgAmounts",
        "offset": 0,
        "slot": "35",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10714,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "maxUsdgAmounts",
        "offset": 0,
        "slot": "36",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10719,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "poolAmounts",
        "offset": 0,
        "slot": "37",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10724,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "reservedAmounts",
        "offset": 0,
        "slot": "38",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10729,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "bufferAmounts",
        "offset": 0,
        "slot": "39",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10734,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "guaranteedUsd",
        "offset": 0,
        "slot": "40",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10739,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "cumulativeFundingRates",
        "offset": 0,
        "slot": "41",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10744,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "lastFundingTimes",
        "offset": 0,
        "slot": "42",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10748,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "positions",
        "offset": 0,
        "slot": "43",
        "type": "t_mapping(t_bytes32,t_struct(Position)10517_storage)"
      },
      {
        "astId": 10753,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "feeReserves",
        "offset": 0,
        "slot": "44",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10758,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "globalShortSizes",
        "offset": 0,
        "slot": "45",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10763,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "globalShortAveragePrices",
        "offset": 0,
        "slot": "46",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10768,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "maxGlobalShortSizes",
        "offset": 0,
        "slot": "47",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10772,
        "contract": "contracts/core/Vault.sol:Vault",
        "label": "errors",
        "offset": 0,
        "slot": "48",
        "type": "t_mapping(t_uint256,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IVaultUtils)19738": {
        "encoding": "inplace",
        "label": "contract IVaultUtils",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(Position)10517_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Vault.Position)",
        "numberOfBytes": "32",
        "value": "t_struct(Position)10517_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Position)10517_storage": {
        "encoding": "inplace",
        "label": "struct Vault.Position",
        "members": [
          {
            "astId": 10504,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "size",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 10506,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "collateral",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 10508,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "averagePrice",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 10510,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "entryFundingRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 10512,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "reserveAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 10514,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "realisedPnl",
            "offset": 0,
            "slot": "5",
            "type": "t_int256"
          },
          {
            "astId": 10516,
            "contract": "contracts/core/Vault.sol:Vault",
            "label": "lastIncreasedTime",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}